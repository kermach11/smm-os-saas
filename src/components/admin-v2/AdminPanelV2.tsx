import React, { useEffect, useState } from 'react';
import { useTranslation } from '../../hooks/useTranslation';
import { useAdminPanelV2 } from '../../hooks/admin-v2/useAdminPanelV2';
import AdminPanelMobile from './AdminPanelMobile';
import AdminPanelDesktop from './AdminPanelDesktop';

interface AdminPanelV2Props {
  isOpen: boolean;
  onClose: () => void;
  onLogout: () => void;
  onVersionSwitch: (version: 'v1' | 'v2') => void;
  currentVersion: 'v1' | 'v2';
}

/**
 * üéØ ADMIN PANEL V2 - –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
 * 
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–±–∏—Ä–∞—î –º—ñ–∂ –º–æ–±—ñ–ª—å–Ω–∏–º —Ç–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω–∏–º —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 * –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø—É –ø—Ä–∏—Å—Ç—Ä–æ—é, —è–∫–∏–π –≤–∏–∑–Ω–∞—á–∞—î AdminManager.
 * 
 * –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:
 * - –†–µ–∞–∫—Ç–∏–≤–Ω–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –≤–∏–±—ñ—Ä responsive –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * - –¢–æ—á–Ω–∞ –∫–æ–ø—ñ—è V1 —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó
 * - –ë–µ–∑–ø–µ—á–Ω–µ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ–π
 */
const AdminPanelV2: React.FC<AdminPanelV2Props> = ({ 
  isOpen, 
  onClose, 
  onLogout, 
  onVersionSwitch, 
  currentVersion 
}) => {
  const { t } = useTranslation();
  const { deviceType, config } = useAdminPanelV2();



  // –†–µ–Ω–¥–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø—É –ø—Ä–∏—Å—Ç—Ä–æ—é
  const renderAdminPanel = () => {
    switch (deviceType) {
      case 'mobile':
        return (
          <AdminPanelMobile
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
            deviceType={deviceType}
            onVersionSwitch={onVersionSwitch}
            currentVersion={currentVersion}
          />
        );
      
      case 'tablet':
        return (
          <AdminPanelDesktop
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
            deviceType={deviceType}
            onVersionSwitch={onVersionSwitch}
            currentVersion={currentVersion}
          />
        );
      
      case 'desktop':
      default:
        return (
          <AdminPanelDesktop
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
            deviceType={deviceType}
            onVersionSwitch={onVersionSwitch}
            currentVersion={currentVersion}
          />
        );
    }
  };

  return (
    <div className="admin-panel-v2">
      {/* üéØ Responsive Admin Panel */}
      {renderAdminPanel()}
    </div>
  );
};

export default AdminPanelV2; 