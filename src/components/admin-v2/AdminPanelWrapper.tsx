import React from 'react';
import { useTranslation } from '../../hooks/useTranslation';
import { useAdminPanelV2 } from '../../hooks/admin-v2/useAdminPanelV2';
import AdminPanel from '../AdminPanel'; // –ü–æ—Ç–æ—á–Ω–∞ v1 –ø–∞–Ω–µ–ª—å
import AdminPanelV2 from './AdminPanelV2'; // –ù–æ–≤–∞ v2 –ø–∞–Ω–µ–ª—å

interface AdminPanelWrapperProps {
  isOpen: boolean;
  onClose: () => void;
  onLogout: () => void;
}

/**
 * üéØ ADMIN PANEL WRAPPER - –û–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ–π
 * 
 * –¶–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–µ—Ä—É—î –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è–º –º—ñ–∂ V1 —Ç–∞ V2 –≤–µ—Ä—Å—ñ—è–º–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ.
 * V1 –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–æ—é –≤–µ—Ä—Å—ñ—î—é, V2 - –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è.
 * 
 * –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:
 * - –ë–µ–∑–ø–µ—á–Ω–µ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ–π
 * - V1 —è–∫ –æ—Å–Ω–æ–≤–Ω–∞ –≤–µ—Ä—Å—ñ—è
 * - V2 –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ —Ä–æ–∑—Ä–æ–±–∫–∏
 * - –ü–µ—Ä–µ–∫–ª–∞–¥ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 * - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–µ—Ä—Å—ñ–π –ø–æ–∑–∞ –ø–∞–Ω–µ–ª–ª—é
 */
const AdminPanelWrapper: React.FC<AdminPanelWrapperProps> = ({ 
  isOpen, 
  onClose, 
  onLogout 
}) => {
  const { t } = useTranslation();
  const { 
    currentVersion, 
    forceV1, 
    testV2, 
    isVisible,
    deviceType
  } = useAdminPanelV2();

  // –û–±—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ–π
  const handleVersionSwitch = (version: 'v1' | 'v2') => {
    if (version === 'v1') {
      forceV1();
    } else if (version === 'v2') {
      testV2();
    }
  };

  // –†–µ–Ω–¥–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó
  const renderAdminPanel = () => {
    switch (currentVersion) {
      case 'v1':
        return (
          <AdminPanel
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
          />
        );
      
      case 'v2':
        return (
          <AdminPanelV2
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
            onVersionSwitch={handleVersionSwitch}
            currentVersion={currentVersion}
          />
        );
      
      default:
        // Fallback –Ω–∞ V1 —è–∫—â–æ —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫
        return (
          <AdminPanel
            isOpen={isOpen}
            onClose={onClose}
            onLogout={onLogout}
          />
        );
    }
  };

  return (
    <div className="admin-panel-wrapper">
      {/* üéØ –†–µ–Ω–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó */}
      {renderAdminPanel()}
      
      {/* üîÑ VERSION SWITCHER - –ó–ê–í–ñ–î–ò –í–ò–î–ò–ú–ò–ô –ü–Ü–î –ß–ê–° –†–û–ó–†–û–ë–ö–ò */}
      {process.env.NODE_ENV === 'development' && (
        <div className="fixed bottom-4 left-4 bg-white/95 backdrop-blur-sm rounded-xl p-4 shadow-2xl border border-gray-200 z-[65]">
          <div className="flex flex-col gap-3">
            <div className="text-sm font-bold text-gray-800 flex items-center gap-2">
              üîÑ {t('admin.panel.version.switcher')}
            </div>
            
            <div className="flex gap-2">
              <button
                onClick={() => handleVersionSwitch('v1')}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                  currentVersion === 'v1'
                    ? 'bg-green-500 text-white shadow-lg'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                {t('admin.panel.version.v1')}
              </button>
              <button
                onClick={() => handleVersionSwitch('v2')}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                  currentVersion === 'v2'
                    ? 'bg-blue-500 text-white shadow-lg'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                {t('admin.panel.version.v2')} 
                <span className="text-xs bg-orange-500 text-white px-1 rounded ml-1">
                  {t('admin.panel.beta.badge')}
                </span>
              </button>
            </div>
            
            <div className="text-xs text-gray-500 border-t border-gray-200 pt-2">
              <div className="flex items-center gap-1 mb-1">
                <span className="text-blue-500">üì±</span>
                <span>–ü—Ä–∏—Å—Ç—Ä—ñ–π: <span className="font-medium capitalize">{deviceType}</span></span>
              </div>
              <div className="flex items-center gap-1">
                <span className="text-green-500">‚úÖ</span>
                <span>{t('admin.panel.all.functions')}</span>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* üéØ INFO MESSAGE - –ö–æ–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ V2 */}
      {process.env.NODE_ENV === 'development' && currentVersion === 'v2' && isOpen && (
        <div className="fixed top-4 right-4 bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded-lg shadow-lg z-[65]">
          <div className="text-sm font-medium flex items-center gap-2">
            üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Admin Panel V2
          </div>
          <div className="text-xs mt-1">
            {t('admin.panel.new.responsive')} ‚Ä¢ {t('admin.panel.safe.testing')}
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminPanelWrapper; 