import React, { useState, useEffect } from 'react';

interface VideoDebuggerProps {
  videoUrl?: string;
  className?: string;
}

const VideoDebugger: React.FC<VideoDebuggerProps> = ({ videoUrl, className = '' }) => {
  const [videoInfo, setVideoInfo] = useState<any>(null);
  const [canPlay, setCanPlay] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (videoUrl) {
      console.log('üîç VideoDebugger: –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –≤—ñ–¥–µ–æ URL:', {
        url: videoUrl.substring(0, 100) + '...',
        length: videoUrl.length,
        isDataUrl: videoUrl.startsWith('data:'),
        mimeType: videoUrl.startsWith('data:') ? videoUrl.split(';')[0] : 'N/A',
        isSvg: videoUrl.includes('data:image/svg+xml'),
        isVideo: videoUrl.startsWith('data:video/')
      });

      setVideoInfo({
        url: videoUrl.substring(0, 100) + '...',
        length: videoUrl.length,
        isDataUrl: videoUrl.startsWith('data:'),
        mimeType: videoUrl.startsWith('data:') ? videoUrl.split(';')[0] : 'N/A',
        isSvg: videoUrl.includes('data:image/svg+xml'),
        isVideo: videoUrl.startsWith('data:video/'),
        sizeKB: (videoUrl.length / 1024).toFixed(2),
        sizeMB: (videoUrl.length / 1024 / 1024).toFixed(2)
      });
    }
  }, [videoUrl]);

  const handleCanPlay = () => {
    console.log('‚úÖ VideoDebugger: –í—ñ–¥–µ–æ –º–æ–∂–µ –≤—ñ–¥—Ç–≤–æ—Ä—é–≤–∞—Ç–∏—Å—è');
    setCanPlay(true);
    setError(null);
  };

  const handleError = (e: any) => {
    const errorMsg = `–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ: ${e.target?.error?.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'}`;
    console.error('‚ùå VideoDebugger:', errorMsg);
    setError(errorMsg);
    setCanPlay(false);
  };

  const handleLoadedMetadata = (e: any) => {
    const video = e.target;
    console.log('üìπ VideoDebugger: –ú–µ—Ç–∞–¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', {
      duration: video.duration,
      videoWidth: video.videoWidth,
      videoHeight: video.videoHeight,
      readyState: video.readyState
    });
  };

  if (!videoUrl) {
    return (
      <div className={`p-4 bg-gray-100 rounded-lg ${className}`}>
        <h3 className="text-lg font-semibold mb-2">üîç Video Debugger</h3>
        <p className="text-gray-600">–ù–µ–º–∞—î –≤—ñ–¥–µ–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏</p>
      </div>
    );
  }

  return (
    <div className={`p-4 bg-gray-100 rounded-lg ${className}`}>
      <h3 className="text-lg font-semibold mb-2">üîç Video Debugger</h3>
      
      {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—ñ–¥–µ–æ */}
      <div className="mb-4 p-3 bg-white rounded border">
        <h4 className="font-medium mb-2">üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ñ–∞–π–ª:</h4>
        {videoInfo && (
          <div className="text-sm space-y-1">
            <div><strong>URL –ø—Ä–µ–≤—å—é:</strong> {videoInfo.url}</div>
            <div><strong>–†–æ–∑–º—ñ—Ä:</strong> {videoInfo.length} –±–∞–π—Ç ({videoInfo.sizeKB} KB / {videoInfo.sizeMB} MB)</div>
            <div><strong>Data URL:</strong> {videoInfo.isDataUrl ? '‚úÖ –¢–∞–∫' : '‚ùå –ù—ñ'}</div>
            <div><strong>MIME —Ç–∏–ø:</strong> {videoInfo.mimeType}</div>
            <div><strong>–¶–µ SVG:</strong> {videoInfo.isSvg ? '‚ö†Ô∏è –¢–∞–∫ (–ø—Ä–µ–≤—å—é)' : '‚úÖ –ù—ñ'}</div>
            <div><strong>–¶–µ –≤—ñ–¥–µ–æ:</strong> {videoInfo.isVideo ? '‚úÖ –¢–∞–∫' : '‚ùå –ù—ñ'}</div>
          </div>
        )}
      </div>

      {/* –°—Ç–∞—Ç—É—Å –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è */}
      <div className="mb-4 p-3 bg-white rounded border">
        <h4 className="font-medium mb-2">üé¨ –°—Ç–∞—Ç—É—Å –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:</h4>
        <div className="flex items-center space-x-4">
          <div className={`px-2 py-1 rounded text-sm ${canPlay ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>
            {canPlay ? '‚úÖ –ì–æ—Ç–æ–≤–µ –¥–æ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è' : '‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...'}
          </div>
          {error && (
            <div className="px-2 py-1 rounded text-sm bg-red-100 text-red-800">
              ‚ùå {error}
            </div>
          )}
        </div>
      </div>

      {/* –í—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è */}
      <div className="mb-4">
        <h4 className="font-medium mb-2">üé• –¢–µ—Å—Ç –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:</h4>
        <div className="border rounded overflow-hidden">
          {videoInfo?.isSvg ? (
            <div className="p-4 bg-yellow-50 text-yellow-800">
              ‚ö†Ô∏è –¶–µ SVG –ø—Ä–µ–≤—å—é, –∞ –Ω–µ –≤—ñ–¥–µ–æ —Ñ–∞–π–ª
            </div>
          ) : (
            <video
              src={videoUrl}
              controls
              muted
              className="w-full max-w-md"
              onCanPlay={handleCanPlay}
              onError={handleError}
              onLoadedMetadata={handleLoadedMetadata}
              style={{ maxHeight: '200px' }}
            />
          )}
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó */}
      <div className="p-3 bg-blue-50 rounded border border-blue-200">
        <h4 className="font-medium mb-2 text-blue-800">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:</h4>
        <div className="text-sm text-blue-700 space-y-1">
          {videoInfo?.isSvg && <div>‚Ä¢ –¶–µ SVG –ø—Ä–µ–≤—å—é. –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–æ–≤–Ω–∏–π –≤—ñ–¥–µ–æ —Ñ–∞–π–ª –∑ IndexedDB</div>}
          {!videoInfo?.isVideo && !videoInfo?.isSvg && <div>‚Ä¢ URL –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –≤–∞–ª—ñ–¥–Ω–∏–π –≤—ñ–¥–µ–æ MIME-—Ç–∏–ø</div>}
          {videoInfo?.length < 100000 && <div>‚Ä¢ –§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –º–∞–ª–∏–π –¥–ª—è –≤—ñ–¥–µ–æ ({videoInfo.sizeKB} KB)</div>}
          
          {/* –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è QuickTime */}
          {videoInfo?.mimeType === 'data:video/quicktime' && (
            <div className="p-2 bg-orange-50 rounded border border-orange-200 mt-2">
              <div className="font-medium text-orange-800 mb-1">‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –∑ —Ñ–æ—Ä–º–∞—Ç–æ–º QuickTime:</div>
              <div className="text-orange-700 space-y-1">
                <div>‚Ä¢ QuickTime (.mov) –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –±—ñ–ª—å—à—ñ—Å—Ç—é –±—Ä–∞—É–∑–µ—Ä—ñ–≤ –¥–ª—è –≤–µ–±-–≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è</div>
                <div>‚Ä¢ <strong>–†—ñ—à–µ–Ω–Ω—è:</strong> –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤—ñ–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ MP4, WebM –∞–±–æ OGV</div>
                <div>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –æ–Ω–ª–∞–π–Ω –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –∞–±–æ –º–µ–¥—ñ–∞ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó</div>
              </div>
            </div>
          )}
          
          {videoInfo?.isVideo && !canPlay && !videoInfo?.mimeType?.includes('quicktime') && (
            <div>‚Ä¢ –í—ñ–¥–µ–æ —Ñ–∞–π–ª –≤–∞–ª—ñ–¥–Ω–∏–π, –∞–ª–µ –±—Ä–∞—É–∑–µ—Ä –Ω–µ –º–æ–∂–µ –π–æ–≥–æ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π —Ñ–æ—Ä–º–∞—Ç.</div>
          )}
          
          {canPlay && <div>‚Ä¢ ‚úÖ –í—ñ–¥–µ–æ –≥–æ—Ç–æ–≤–µ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!</div>}
          
          {error?.includes('Unable to load URL due to content type') && (
            <div className="p-2 bg-red-50 rounded border border-red-200 mt-2">
              <div className="font-medium text-red-800 mb-1">‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:</div>
              <div className="text-red-700 space-y-1">
                <div>‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Ü–µ–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–µ–æ</div>
                <div>‚Ä¢ <strong>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏:</strong> MP4 (H.264), WebM, OGV</div>
                <div>‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç—É–π—Ç–µ –≤—ñ–¥–µ–æ –≤ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç</div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default VideoDebugger; 