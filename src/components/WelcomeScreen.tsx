import { motion } from "framer-motion";
import { useState, useEffect, useRef } from "react";
import indexedDBService from '../services/IndexedDBService';
import SplineAnimation from './SplineAnimation';
import { responsiveFontSize } from '../lib/utils';
import { useAnalytics } from '../hooks/useAnalytics';

interface WelcomeScreenProps {
  visible: boolean;
  onComplete: () => void;
  isAudioLoaded: boolean;
  settings?: WelcomeSettings;
}

interface WelcomeSettings {
  title: string;
  subtitle: string;
  description: string;
  buttonText: string;
  hintText: string;
  backgroundType: 'gradient' | 'color' | 'image' | 'video';
  backgroundColor: string;
  gradientFrom: string;
  gradientTo: string;
  backgroundImage: string;
  backgroundVideo: string;
  textColor: string;
  subtitleColor: string;
  descriptionColor: string;
  buttonColor: string;
  buttonTextColor: string;
  logoUrl: string;
  logoSize?: number;
  showLogo: boolean;
  hasMusic: boolean;
  musicUrl: string;
  musicVolume: number;
  musicLoop: boolean;
  autoPlay: boolean;
  showParticles: boolean;
  particleColor: string;
  animationSpeed: 'slow' | 'normal' | 'fast';
  // –ê–Ω—ñ–º–∞—Ü—ñ—ó
  titleAnimation?: 'none' | 'fadeIn' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomIn' | 'zoomOut' | 'rotateIn' | 'bounce' | 'typewriter' | 'glow';
  subtitleAnimation?: 'none' | 'fadeIn' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomIn' | 'zoomOut' | 'rotateIn' | 'bounce' | 'typewriter' | 'glow';
  descriptionAnimation?: 'none' | 'fadeIn' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomIn' | 'zoomOut' | 'rotateIn' | 'bounce' | 'typewriter' | 'glow';
  titleExitAnimation?: 'none' | 'fadeOut' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomOut' | 'zoomIn' | 'rotateOut' | 'dissolve';
  subtitleExitAnimation?: 'none' | 'fadeOut' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomOut' | 'zoomIn' | 'rotateOut' | 'dissolve';
  descriptionExitAnimation?: 'none' | 'fadeOut' | 'slideUp' | 'slideDown' | 'slideLeft' | 'slideRight' | 'zoomOut' | 'zoomIn' | 'rotateOut' | 'dissolve';
  animationDuration?: number;
  animationDelay?: number;
  // Typography settings
  titleFontSize?: number;
  subtitleFontSize?: number;
  descriptionFontSize?: number;
  titleFontFamily?: string;
  subtitleFontFamily?: string;
  descriptionFontFamily?: string;
  titleFontWeight?: number;
  subtitleFontWeight?: number;
  descriptionFontWeight?: number;
  titleFontStyle?: string;
  subtitleFontStyle?: string;
  descriptionFontStyle?: string;
  // –¢—ñ–Ω—ñ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏
  titleShadowIntensity?: number;
  subtitleShadowIntensity?: number;
  descriptionShadowIntensity?: number;
  titleShadowColor?: string;
  subtitleShadowColor?: string;
  descriptionShadowColor?: string;
  title3DDepth?: number;
  subtitle3DDepth?: number;
  description3DDepth?: number;
  splineSettings?: {
    enabled: boolean;
    sceneUrl: string;
    embedCode: string;
    localFile: string;
    position: 'background' | 'foreground' | 'overlay';
    opacity: number;
    scale: number;
    autoplay: boolean;
    controls: boolean;
    method: 'iframe' | 'component' | 'local';
  };
}

// –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–µ–º–Ω–æ–≥–æ —Ñ–æ–Ω—É –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
const minimalDefaultSettings: WelcomeSettings = {
  title: undefined,           // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  subtitle: undefined,        // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  description: undefined,     // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  buttonText: undefined,      // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º (–∑ fallback)
  hintText: "",              // ‚úÖ –ó–∞–ª–∏—à–∞—î–º–æ - –Ω–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ
  backgroundType: undefined,   // üåÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  backgroundColor: '#000000',  // ‚úÖ –ó–∞–ª–∏—à–∞—î–º–æ - –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  gradientFrom: undefined,     // üåÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  gradientTo: undefined,       // üåÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  backgroundImage: undefined,  // üåÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  backgroundVideo: undefined,  // üåÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  textColor: '#ffffff',       // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleColor: '#ffffff',   // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionColor: '#ffffff', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  buttonColor: '#000000',     // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  buttonTextColor: '#ffffff', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  logoUrl: undefined,         // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  logoSize: undefined,        // ‚úçÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  showLogo: false,           // ‚úÖ –ó–∞–ª–∏—à–∞—î–º–æ - –ª–æ–≥—ñ–∫–∞ –ø–æ–∫–∞–∑—É
  hasMusic: undefined,        // üéµ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º  
  musicUrl: undefined,        // üéµ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  musicVolume: 0.5,
  musicLoop: true,
  autoPlay: false,
  showParticles: false,
  particleColor: '#ffffff',
  animationSpeed: 'normal',
  // –ê–Ω—ñ–º–∞—Ü—ñ—ó - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–µ—Ñ–æ–ª—Ç–∏ –¥–ª—è –±–µ–∑–ø–µ–∫–∏
  titleAnimation: 'fadeIn',         // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleAnimation: 'fadeIn',      // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionAnimation: 'fadeIn',   // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  titleExitAnimation: 'fadeOut',    // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleExitAnimation: 'fadeOut', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionExitAnimation: 'fadeOut', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  animationDuration: 800,           // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  animationDelay: 200,              // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  // Typography settings - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –¥–µ—Ñ–æ–ª—Ç–∏ –¥–ª—è –±–µ–∑–ø–µ–∫–∏
  titleFontSize: 32,            // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleFontSize: 20,         // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionFontSize: 14,      // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  titleFontFamily: 'Inter',     // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleFontFamily: 'Inter',  // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionFontFamily: 'Inter', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  titleFontWeight: undefined,   // ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  subtitleFontWeight: undefined, // ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  descriptionFontWeight: undefined, // ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  titleFontStyle: 'normal',     // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  subtitleFontStyle: 'normal',  // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  descriptionFontStyle: 'normal', // üîß –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–µ—Ñ–æ–ª—Ç
  // –¢—ñ–Ω—ñ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏ - –∫–æ–Ω—Ç—Ä–æ–ª—é—é—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  titleShadowIntensity: undefined,    // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  subtitleShadowIntensity: undefined, // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  descriptionShadowIntensity: undefined, // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  titleShadowColor: undefined,        // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  subtitleShadowColor: undefined,     // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  descriptionShadowColor: undefined,  // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  title3DDepth: undefined,            // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  subtitle3DDepth: undefined,         // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  description3DDepth: undefined,      // üåü –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  splineSettings: undefined     // üåê –ö–æ–Ω—Ç—Ä–æ–ª—é—î—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
};

const WelcomeScreen = ({ visible, onComplete, isAudioLoaded, settings: propsSettings }: WelcomeScreenProps) => {
  const [isPressed, setIsPressed] = useState(false);
  const [settings, setSettings] = useState<WelcomeSettings>(propsSettings || minimalDefaultSettings);
  const [customMusicLoaded, setCustomMusicLoaded] = useState(false);
  const [isSettingsLoaded, setIsSettingsLoaded] = useState(!!propsSettings);
  const [animationKey, setAnimationKey] = useState(0);
  
  // üöÄ –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–Ø: –°—Ç–∞–Ω –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ (–Ω–µ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —ñ—Å–Ω—É—é—á—É –ª–æ–≥—ñ–∫—É)
  const [isContentReady, setIsContentReady] = useState(!!propsSettings);
  
  const musicRef = useRef<HTMLAudioElement>(null);
  
  // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤—Ö–æ–¥—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
  const { trackClick } = useAnalytics();



  // –ü—Ä–æ—Å—Ç–∏–π —Ñ—ñ–∫—Å - —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è —Å–∫—Ä–æ–ª–±–∞—Ä—ñ–≤
  useEffect(() => {
    // –¢—ñ–ª—å–∫–∏ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —Å–∫—Ä–æ–ª–±–∞—Ä–∏, –±–µ–∑ –∑–º—ñ–Ω–∏ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è
    document.body.style.overflowX = 'hidden';
    
    return () => {
      document.body.style.overflowX = '';
    };
  }, []);

  // –ó—É–ø–∏–Ω–∫–∞ –º—É–∑–∏–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ
  useEffect(() => {
    if (!visible && musicRef.current) {
      console.log('üéµ WelcomeScreen: –ó—É–ø–∏–Ω—è—î–º–æ –º—É–∑–∏–∫—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ');
      musicRef.current.pause();
      musicRef.current.currentTime = 0;
    }
  }, [visible]);

  // Cleanup –ø—Ä–∏ –¥–µ–º–æ–Ω—Ç–∞–∂—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      if (musicRef.current) {
        console.log('üéµ WelcomeScreen: –û—á–∏—â–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ –ø—Ä–∏ –¥–µ–º–æ–Ω—Ç–∞–∂—ñ');
        musicRef.current.pause();
        musicRef.current.currentTime = 0;
      }
    };
  }, []);

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ props —è–∫—â–æ —î, —ñ–Ω–∞–∫—à–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
  useEffect(() => {
    if (propsSettings) {
      const safeSettings = {
        ...minimalDefaultSettings,
        ...propsSettings,
        splineSettings: {
          ...minimalDefaultSettings.splineSettings,
          ...(propsSettings.splineSettings || {})
        }
      };
      setSettings(safeSettings);
      return;
    }

    const loadSettings = async () => {
      try {
        console.log('üîÑ WelcomeScreen: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —á–µ—Ä–µ–∑ IndexedDBService...');
        
        // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ IndexedDB
        const indexedDBSettings = await indexedDBService.loadSettings('welcomeSettings');
        
        if (indexedDBSettings) {
          console.log('‚úÖ WelcomeScreen: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ IndexedDB');
          const safeSettings = {
            ...minimalDefaultSettings,
            ...indexedDBSettings,
            splineSettings: {
              ...minimalDefaultSettings.splineSettings,
              ...(indexedDBSettings.splineSettings || {})
            }
          };
          setSettings(safeSettings);
        } else {
          // –Ø–∫—â–æ IndexedDB –ø–æ—Ä–æ–∂–Ω—ñ–π, –ø—Ä–æ–±—É—î–º–æ localStorage —è–∫ —Ä–µ–∑–µ—Ä–≤
          console.log('‚ÑπÔ∏è WelcomeScreen: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ IndexedDB, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage...');
          const savedSettings = localStorage.getItem('welcomeSettings') || localStorage.getItem('welcomeSettings_backup');
          if (savedSettings) {
            const parsed = JSON.parse(savedSettings);
            console.log('‚úÖ WelcomeScreen: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage');
            const safeSettings = {
              ...minimalDefaultSettings,
              ...parsed,
              splineSettings: {
                ...minimalDefaultSettings.splineSettings,
                ...(parsed.splineSettings || {})
              }
            };
            setSettings(safeSettings);
            
            // –ú—ñ–≥—Ä—É—î–º–æ –≤ IndexedDB –¢–Ü–õ–¨–ö–ò –û–î–ò–ù –†–ê–ó
            console.log('üîÑ WelcomeScreen: –ú—ñ–≥—Ä–∞—Ü—ñ—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≤ IndexedDB...');
            await indexedDBService.saveSettings('welcomeSettings', safeSettings, 'project');
            console.log('‚úÖ WelcomeScreen: –ú—ñ–≥—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            
            // –í–∏–¥–∞–ª—è—î–º–æ –∑ localStorage –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó
            localStorage.removeItem('welcomeSettings');
            localStorage.removeItem('welcomeSettings_backup');
            console.log('üóëÔ∏è WelcomeScreen: –í–∏–¥–∞–ª–µ–Ω–æ –∑ localStorage –ø—ñ—Å–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó');
          } else {
            console.log('‚ÑπÔ∏è WelcomeScreen: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º');
            setSettings(minimalDefaultSettings);
          }
        }
        
        // –ó–∞–≤–∂–¥–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ isSettingsLoaded –≤ true –ø—ñ—Å–ª—è —Å–ø—Ä–æ–±–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        setIsSettingsLoaded(true);
        // üöÄ –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–Ø: –ö–æ–Ω—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ –ø–æ–∫–∞–∑—É
        setIsContentReady(true);
      } catch (error) {
        console.error('‚ùå WelcomeScreen: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', error);
        // –ù–∞–≤—ñ—Ç—å —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        setSettings(minimalDefaultSettings);
        setIsSettingsLoaded(true);
        // üöÄ –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–Ø: –ö–æ–Ω—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ –ø–æ–∫–∞–∑—É (–Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ)
        setIsContentReady(true);
      }
    };

    loadSettings();

    // –°–ª—É—Ö–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    const handleSettingsUpdate = (event: CustomEvent) => {
      console.log('üîÑ WelcomeScreen: –û—Ç—Ä–∏–º–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', {
        splineSettings: event.detail.splineSettings,
        titleFontSize: event.detail.titleFontSize,
        titleFontFamily: event.detail.titleFontFamily,
        titleFontWeight: event.detail.titleFontWeight,
        title: event.detail.title
      });
      const safeSettings = {
        ...minimalDefaultSettings,
        ...event.detail,
        splineSettings: {
          ...minimalDefaultSettings.splineSettings,
          ...(event.detail.splineSettings || {})
        }
      };
      console.log('üîÑ WelcomeScreen: –§—ñ–Ω–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:', {
        titleFontSize: safeSettings.titleFontSize,
        titleFontFamily: safeSettings.titleFontFamily,
        titleFontWeight: safeSettings.titleFontWeight,
        title: safeSettings.title
      });
      setSettings(safeSettings);
    };

    window.addEventListener('welcomeSettingsUpdated', handleSettingsUpdate as EventListener);
    
    return () => {
      window.removeEventListener('welcomeSettingsUpdated', handleSettingsUpdate as EventListener);
    };
  }, [propsSettings]);

  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–Ω—ñ–º–∞—Ü—ñ–π –ø—Ä–∏ –∑–º—ñ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  useEffect(() => {
    if (isSettingsLoaded) {
      setAnimationKey(prev => prev + 1);
      console.log('üé≠ WelcomeScreen: Animation key updated:', animationKey + 1);
    }
  }, [settings.titleAnimation, settings.subtitleAnimation, settings.descriptionAnimation, settings.animationDuration, settings.animationDelay, isSettingsLoaded]);

  // –ï—Ñ–µ–∫—Ç –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≤–ª–∞—Å–Ω–æ—é –º—É–∑–∏–∫–æ—é
  useEffect(() => {
    if (musicRef.current && settings.hasMusic && settings.musicUrl) {
      musicRef.current.volume = settings.musicVolume;
      
      const handleCanPlay = () => {
        setCustomMusicLoaded(true);
        if (settings.autoPlay) {
          musicRef.current?.play().catch(() => {
            // –¢–∏—Ö–æ —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –∞–≤—Ç–æ–ø–ª–µ—é
          });
        }
      };

      musicRef.current.addEventListener('canplay', handleCanPlay);
      
      return () => {
        musicRef.current?.removeEventListener('canplay', handleCanPlay);
      };
    }
  }, [settings.hasMusic, settings.musicUrl, settings.musicVolume, settings.autoPlay]);

  const handleEnter = async () => {
    setIsPressed(true);
    
    console.log('üé¨ WelcomeScreen: handleEnter –≤–∏–∫–ª–∏–∫–∞–Ω–æ, buttonText:', settings.buttonText);
    
    // üìä –ê–ù–ê–õ–Ü–¢–ò–ö–ê: –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –≤—Ö—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞ (—Ü–µ –≥–æ–ª–æ–≤–Ω–∞ –º–µ—Ç—Ä–∏–∫–∞ –≤—Ö–æ–¥—É)
    const clickTitle = `Client Entry - ${settings.buttonText || '–ü–æ—á–∞—Ç–∏'}`;
    console.log('üìä WelcomeScreen: –í–∏–∫–ª–∏–∫–∞—î–º–æ trackClick –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
      url: '#welcome-enter-button',
      title: clickTitle
    });
    
    trackClick('#welcome-enter-button', clickTitle, 'welcome-entry');
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –º—É–∑–∏–∫—É –≤ —Ñ–æ–Ω—ñ –±–µ–∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è UI
    // –í–ª–∞—Å–Ω–∞ –º—É–∑–∏–∫–∞ Welcome —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if (settings.hasMusic && settings.musicUrl && musicRef.current) {
      musicRef.current.play().catch(() => {
        // –¢–∏—Ö–æ —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
      });
    }

    // –§–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ MainScreen —Ç–µ–ø–µ—Ä –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏
    
    // –ù–µ–≥–∞–π–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–∞–ª—ñ –±–µ–∑ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –º—É–∑–∏–∫–∏
    setTimeout(() => {
      console.log('üé¨ WelcomeScreen: –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ MainScreen —á–µ—Ä–µ–∑ 150ms');
      onComplete();
      setIsPressed(false);
    }, 150);
  };

  const getBackgroundStyle = () => {
    switch (settings.backgroundType) {
      case 'color':
        return { backgroundColor: settings.backgroundColor };
      case 'gradient':
        return { 
          background: `linear-gradient(135deg, ${settings.gradientFrom} 0%, ${settings.gradientTo} 100%)` 
        };
      case 'image':
        return settings.backgroundImage ? {
          backgroundImage: `url(${settings.backgroundImage})`,
          backgroundSize: 'cover',
          backgroundPosition: 'center'
        } : { backgroundColor: settings.backgroundColor };
      case 'video':
        return { backgroundColor: settings.backgroundColor };
      default:
        return { 
          background: `linear-gradient(135deg, ${settings.gradientFrom} 0%, ${settings.gradientTo} 100%)` 
        };
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å—Ç–∏–ª—ñ–≤ —Ç–µ–∫—Å—Ç—É –∑ —Ç—ñ–Ω—è–º–∏ —Ç–∞ –µ—Ñ–µ–∫—Ç–∞–º–∏
  const getTextStyle = (element: 'title' | 'subtitle' | 'description') => {
    const baseStyle: any = {
      color: element === 'title' ? settings.textColor : 
             element === 'subtitle' ? settings.subtitleColor : 
             settings.descriptionColor,
      fontFamily: settings[`${element}FontFamily`],
      fontWeight: settings[`${element}FontWeight`],
      fontStyle: settings[`${element}FontStyle`],
      fontSize: responsiveFontSize(settings[`${element}FontSize`])
    };

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç—ñ–Ω–µ–π
    const shadowIntensity = settings[`${element}ShadowIntensity`];
    const shadowColor = settings[`${element}ShadowColor`];
    const depth3D = settings[`${element}3DDepth`];

    const hexToRgb = (hex: string) => {
      const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
      return result 
        ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}`
        : '0, 0, 0';
    };

    if (depth3D > 0) {
      // 3D –µ—Ñ–µ–∫—Ç
      const shadows = Array.from({ length: depth3D }, (_, i) => 
        `${i + 1}px ${i + 1}px 0 ${shadowColor}`
      ).join(', ');
      baseStyle.textShadow = shadows;
    } else if (shadowIntensity > 0) {
      // –ó–≤–∏—á–∞–π–Ω–∞ —Ç—ñ–Ω—å
      const offset = Math.round(shadowIntensity * 4);
      const blur = Math.round(shadowIntensity * 8);
      baseStyle.textShadow = `${offset}px ${offset}px ${blur}px rgba(${hexToRgb(shadowColor)}, ${shadowIntensity})`;
    }

    return baseStyle;
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –∞–Ω—ñ–º–∞—Ü—ñ–π
  const getAnimationVariants = (element: 'title' | 'subtitle' | 'description') => {
    const enterAnimation = element === 'title' ? settings.titleAnimation :
                          element === 'subtitle' ? settings.subtitleAnimation :
                          settings.descriptionAnimation;
    
    console.log(`üé≠ WelcomeScreen: getAnimationVariants –¥–ª—è ${element}:`, {
      enterAnimation,
      settingsAnimations: {
        titleAnimation: settings.titleAnimation,
        subtitleAnimation: settings.subtitleAnimation,
        descriptionAnimation: settings.descriptionAnimation
      }
    });

    // –Ø–∫—â–æ –∞–Ω—ñ–º–∞—Ü—ñ—è 'none' –∞–±–æ –Ω–µ –∑–∞–¥–∞–Ω–∞, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞—Ç–∏—á–Ω—É –∞–Ω—ñ–º–∞—Ü—ñ—é
    if (!enterAnimation || enterAnimation === 'none') {
      console.log(`üé≠ WelcomeScreen: No animation for ${element}, returning static`);
      return {
        initial: { opacity: 1 },
        animate: { opacity: 1 },
        transition: { duration: 0 }
      };
    }
    
    const exitAnimation = element === 'title' ? settings.titleExitAnimation :
                         element === 'subtitle' ? settings.subtitleExitAnimation :
                         settings.descriptionExitAnimation;

    const duration = settings.animationDuration ? settings.animationDuration / 1000 : 0.8;
    const delay = settings.animationDelay ? settings.animationDelay / 1000 : 0.2;

    const variants: any = {
      hidden: { opacity: 0 },
      visible: { opacity: 1 }
    };

    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—Ö–æ–¥—É
    switch (enterAnimation) {
      case 'fadeIn':
        variants.hidden = { opacity: 0 };
        variants.visible = { opacity: 1 };
        break;
      case 'slideUp':
        variants.hidden = { opacity: 0, y: 50 };
        variants.visible = { opacity: 1, y: 0 };
        break;
      case 'slideDown':
        variants.hidden = { opacity: 0, y: -50 };
        variants.visible = { opacity: 1, y: 0 };
        break;
      case 'slideLeft':
        variants.hidden = { opacity: 0, x: 50 };
        variants.visible = { opacity: 1, x: 0 };
        break;
      case 'slideRight':
        variants.hidden = { opacity: 0, x: -50 };
        variants.visible = { opacity: 1, x: 0 };
        break;
      case 'zoomIn':
        variants.hidden = { opacity: 0, scale: 0.8 };
        variants.visible = { opacity: 1, scale: 1 };
        break;
      case 'zoomOut':
        variants.hidden = { opacity: 0, scale: 1.2 };
        variants.visible = { opacity: 1, scale: 1 };
        break;
      case 'rotateIn':
        variants.hidden = { opacity: 0, rotate: -180 };
        variants.visible = { opacity: 1, rotate: 0 };
        break;
      case 'bounce':
        variants.hidden = { opacity: 0, y: 50 };
        variants.visible = { 
          opacity: 1, 
          y: 0,
          transition: {
            type: 'spring',
            stiffness: 300,
            damping: 20
          }
        };
        break;
      case 'typewriter':
        variants.hidden = { opacity: 0, width: 0 };
        variants.visible = { opacity: 1, width: 'auto' };
        break;
      case 'glow':
        variants.hidden = { opacity: 0, textShadow: '0 0 0px rgba(255,255,255,0)' };
        variants.visible = { opacity: 1, textShadow: '0 0 20px rgba(255,255,255,0.8)' };
        break;
      default:
        variants.hidden = { opacity: 0 };
        variants.visible = { opacity: 1 };
    }

    const animationConfig = {
      initial: 'hidden',
      animate: 'visible',
      variants,
      transition: {
        duration,
        delay: delay * (element === 'title' ? 0 : element === 'subtitle' ? 1 : 2),
        type: enterAnimation === 'bounce' ? 'spring' : 'tween',
        stiffness: enterAnimation === 'bounce' ? 300 : undefined,
        damping: enterAnimation === 'bounce' ? 20 : undefined
      }
    };

    console.log(`üé≠ WelcomeScreen: Animation config for ${element}:`, animationConfig);
    
    return animationConfig;
  };

  // –°–ø—Ä–æ—â–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ - –∫–Ω–æ–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  // –ù–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∞—É–¥—ñ–æ —Å—Ç–∞–Ω—É –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö
  const isReady = isSettingsLoaded;

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: visible && isSettingsLoaded ? 1 : 0 }}
      exit={{ opacity: 0 }}
      transition={{ 
        duration: 1.2, 
        ease: [0.25, 0.1, 0.25, 1.0] // –ü–ª–∞–≤–Ω—ñ—à–∞ –∫—Ä–∏–≤–∞ –∞–Ω—ñ–º–∞—Ü—ñ—ó
      }}
      className="welcome-screen-container fixed inset-0 flex items-center justify-center z-50 overflow-hidden"
      style={{ 
        ...getBackgroundStyle(),
        display: visible ? 'flex' : 'none',
        pointerEvents: visible ? 'auto' : 'none'
      }}
    >
      {/* Background video */}
      {settings.backgroundType === 'video' && settings.backgroundVideo && (
        <video
          autoPlay
          muted
          loop
          className="absolute inset-0 w-full h-full object-cover"
        >
          <source src={settings.backgroundVideo} type="video/mp4" />
        </video>
      )}

      {/* Spline 3D Animation */}
      {settings.splineSettings?.enabled && (
        <SplineAnimation
          sceneUrl={settings.splineSettings.sceneUrl}
          embedCode={settings.splineSettings.embedCode}
          localFile={settings.splineSettings.localFile}
          position={settings.splineSettings.position}
          opacity={settings.splineSettings.opacity}
          scale={settings.splineSettings.scale}
          autoplay={settings.splineSettings.autoplay}
          controls={settings.splineSettings.controls}
          method={settings.splineSettings.method}
          className="absolute inset-0"
        />
      )}

      {/* Background pattern */}
      <div className="absolute inset-0 overflow-hidden">
        <motion.div 
                        className="absolute inset-0 opacity-0"
          initial={{ opacity: 0 }}
          animate={{ opacity: 0.05 }}
          transition={{ duration: 1.5, delay: 0.3 }}
        />
      </div>

      <div className="relative text-center px-6 max-w-md mx-auto z-10 overflow-hidden">
        {/* Logo and Title */}
        <div className="mb-8">
          {/* Logo - only if logoUrl exists */}
          {settings.logoUrl && (
            <div className="flex items-center justify-center mb-4">
              <img 
                src={settings.logoUrl} 
                alt="Logo" 
                className="w-auto h-auto object-contain"
                style={{ 
                  maxWidth: settings.logoSize ? `${settings.logoSize}px` : '96px', 
                  maxHeight: settings.logoSize ? `${settings.logoSize}px` : '96px',
                  width: 'auto',
                  height: 'auto'
                }}
              />
            </div>
          )}
          
          {/* Title - always show if exists */}
          {settings.title && (
            <motion.h1 
              key={`title-${animationKey}`}
              className="sf-text" 
              style={getTextStyle('title')}
              {...getAnimationVariants('title')}
            >
              {settings.title}
            </motion.h1>
          )}
        </div>

        {/* Welcome text */}
        <div className="mb-12">
          <motion.h2 
            key={`subtitle-${animationKey}`}
            className="mb-3 sf-heading" 
            style={getTextStyle('subtitle')}
            {...getAnimationVariants('subtitle')}
          >
            {settings.subtitle}
          </motion.h2>
          <motion.p 
            key={`description-${animationKey}`}
            className="leading-relaxed sf-body" 
            style={getTextStyle('description')}
            {...getAnimationVariants('description')}
          >
            {settings.description ? settings.description.split('\n').map((line, index) => (
              <span key={index}>
                {line}
                {index < settings.description.split('\n').length - 1 && <br />}
              </span>
            )) : ''}
          </motion.p>
        </div>

        {/* Enter button */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: isSettingsLoaded ? 1 : 0 }}
          transition={{ 
            duration: 1.2, 
            delay: isSettingsLoaded ? 1.5 : 0, 
            ease: "easeOut"
          }}
        >
          <button
            onClick={(e) => {
              console.log('üñ±Ô∏è WelcomeScreen: onClick –≤–∏–∫–ª–∏–∫–∞–Ω–æ', {
                clientX: e.clientX,
                clientY: e.clientY,
                target: e.target,
                pointerType: (e as any).pointerType || 'unknown'
              });
              handleEnter();
            }}
            onTouchStart={() => {
              console.log('üì± WelcomeScreen: onTouchStart (–º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ—Ç–∏–∫)');
            }}
            onTouchEnd={() => {
              console.log('üì± WelcomeScreen: onTouchEnd (–º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ—Ç–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ)');
            }}
            disabled={!isReady}
            className={`
              relative px-8 py-4 rounded-full font-medium
              transition-all duration-300 transform
              ${isPressed ? 'scale-95' : 'scale-100 hover:scale-105'}
              ${!isReady ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}
              shadow-lg hover:shadow-xl
            `}
            style={{
              backgroundColor: isReady ? settings.buttonColor : '#9ca3af',
              color: settings.buttonTextColor,
            }}
          >
            <span className="flex items-center gap-3">
              {!isReady ? (
                <>
                  <div className="w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                  –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
                </>
              ) : (
                <>
                  {settings.buttonText || "–ü–æ—á–∞—Ç–∏"}
                </>
              )}
            </span>
          </button>
        </motion.div>

        {/* Hint text */}
        {isReady && (
                    <motion.p
            initial={{ opacity: 0 }}
            animate={{ opacity: isSettingsLoaded ? 1 : 0 }}
            transition={{ 
              duration: 1.2, 
              delay: isSettingsLoaded ? 2.2 : 0, 
              ease: "easeOut"
            }}
            className="text-xs mt-6 sf-body"
            style={{ 
              color: settings.descriptionColor, 
              opacity: isSettingsLoaded ? 0.7 : 0
            }}
          >
            {settings.hintText}
          </motion.p>
        )}
      </div>

      {/* –í–ª–∞—Å–Ω–∞ —Ñ–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ */}
      {settings.hasMusic && settings.musicUrl && (
        <audio 
          ref={musicRef}
          loop={settings.musicLoop}
          className="hidden"
        >
          <source src={settings.musicUrl} type="audio/mpeg" />
          <source src={settings.musicUrl} type="audio/wav" />
          <source src={settings.musicUrl} type="audio/ogg" />
        </audio>
      )}
    </motion.div>
  );
};

export default WelcomeScreen; 