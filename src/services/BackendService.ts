// Backend Service –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Å–µ—Ä–≤–µ—Ä–Ω–∏–º –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è–º
class BackendService {
  private siteId: string;
  private baseUrl: string;
  private isLocalDev: boolean;

  constructor() {
    // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID —Å–∞–π—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–æ–º–µ–Ω—É
    this.siteId = this.generateSiteId();
    this.baseUrl = '/.netlify/functions';
    this.isLocalDev = this.checkIfLocalDev();
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –ª–æ–∫–∞–ª—å–Ω–∞ —Ä–æ–∑—Ä–æ–±–∫–∞
  private checkIfLocalDev(): boolean {
    const hostname = window.location.hostname;
    const port = window.location.port;
    return hostname === 'localhost' || 
           hostname === '127.0.0.1' || 
           hostname.includes('192.168') || 
           port === '5173' || 
           port === '3000';
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ ID —Å–∞–π—Ç—É
  private generateSiteId(): string {
    const domain = window.location.hostname;
    // –î–ª—è localhost –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
    if (domain === 'localhost' || domain === '127.0.0.1' || domain.includes('192.168')) {
      return domain.replace(/\./g, '-');
    }
    return domain.replace(/\./g, '-');
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞
  private isAdminAuthenticated(): boolean {
    try {
      // –ù–∞ –∫–ª—ñ—î–Ω—Ç—Å—å–∫–∏—Ö —Å–∞–π—Ç–∞—Ö (–Ω–µ localhost) –¥–æ–∑–≤–æ–ª—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
      if (!this.isLocalDev) {
        return true;
      }
      
      const sessionData = localStorage.getItem('adminSession');
      if (!sessionData) return false;
      
      const session = JSON.parse(sessionData);
      const now = new Date().getTime();
      
      return session.expiry > now;
    } catch {
      return false;
    }
  }

  // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
  async saveSettings(settingsType: string, data: any): Promise<boolean> {
    try {
      // –í —Ä–µ–∂–∏–º—ñ –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ backend
      if (this.isLocalDev) {
        // –¢–∏—Ö–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ true –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        return true;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
      if (!this.isAdminAuthenticated()) {
        console.warn(`üîí BackendService: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ${settingsType}`);
        return false;
      }
      
      console.log(`üíæ BackendService: –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è ${settingsType} –¥–ª—è —Å–∞–π—Ç—É ${this.siteId}`);
      
      const response = await fetch(`${this.baseUrl}/save-settings`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          siteId: this.siteId,
          settingsType,
          data
        })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      console.log(`‚úÖ BackendService: ${settingsType} –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ`);
      return result.success;

    } catch (error) {
      console.error(`‚ùå BackendService: –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ${settingsType}:`, error);
      return false;
    }
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ —Å–µ—Ä–≤–µ—Ä–∞
  async loadSettings(settingsType: string): Promise<any | null> {
    try {
      // –í —Ä–µ–∂–∏–º—ñ –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ backend
      if (this.isLocalDev) {
        // –¢–∏—Ö–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        return null;
      }

      console.log(`üîÑ BackendService: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${settingsType} –¥–ª—è —Å–∞–π—Ç—É ${this.siteId}`);
      
      const response = await fetch(
        `${this.baseUrl}/load-settings?siteId=${this.siteId}&settingsType=${settingsType}`
      );

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.success && result.data) {
        console.log(`‚úÖ BackendService: ${settingsType} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ`);
        return result.data;
      } else {
        console.log(`‚ÑπÔ∏è BackendService: ${settingsType} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ`);
        return null;
      }

    } catch (error) {
      console.error(`‚ùå BackendService: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${settingsType}:`, error);
      return null;
    }
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ backend —Å–µ—Ä–≤—ñ—Å—É
  async checkConnection(): Promise<boolean> {
    try {
      // –í —Ä–µ–∂–∏–º—ñ –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ false
      if (this.isLocalDev) {
        // –¢–∏—Ö–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ false –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        return false;
      }

      const response = await fetch(`${this.baseUrl}/load-settings?siteId=test&settingsType=test`);
      return response.status !== 404; // 404 –æ–∑–Ω–∞—á–∞—î —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞
    } catch (error) {
      console.warn('‚ö†Ô∏è BackendService: Backend –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è');
      return false;
    }
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å–∞–π—Ç
  getSiteInfo(): { siteId: string; domain: string; isLocalDev: boolean } {
    return {
      siteId: this.siteId,
      domain: window.location.hostname,
      isLocalDev: this.isLocalDev
    };
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ª–æ–∫–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–æ–º
  async syncWithServer(settingsType: string, localData: any): Promise<any> {
    try {
      // –í —Ä–µ–∂–∏–º—ñ –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ –∑–∞–≤–∂–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
      if (this.isLocalDev) {
        console.log(`üîß BackendService: –õ–æ–∫–∞–ª—å–Ω–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${settingsType}`);
        return localData;
      }

      // –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –¥–∞–Ω—ñ
      const serverData = await this.loadSettings(settingsType);
      
      if (!serverData) {
        // –Ø–∫—â–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ
        await this.saveSettings(settingsType, localData);
        return localData;
      }

      // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ timestamp —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–≤—ñ–∂—ñ—à—ñ –¥–∞–Ω—ñ
      const serverTime = new Date(serverData.lastModified || 0).getTime();
      const localTime = new Date(localData.lastModified || 0).getTime();

      if (serverTime > localTime) {
        console.log(`üîÑ BackendService: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è ${settingsType}`);
        return serverData;
      } else {
        console.log(`üîÑ BackendService: –û–Ω–æ–≤–ª—é—î–º–æ —Å–µ—Ä–≤–µ—Ä –ª–æ–∫–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –¥–ª—è ${settingsType}`);
        await this.saveSettings(settingsType, localData);
        return localData;
      }

    } catch (error) {
      console.error(`‚ùå BackendService: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó ${settingsType}:`, error);
      return localData; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –≤ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
    }
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É
export const backendService = new BackendService(); 