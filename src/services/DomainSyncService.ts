interface SyncData {
  timestamp: number;
  dataType: 'mainPageSettings' | 'introSettings' | 'welcomeSettings';
  action: 'sync' | 'reload';
}

class DomainSyncService {
  private readonly CHANNEL_NAME = 'website_sync_channel';
  private broadcastChannel: BroadcastChannel;
  
  constructor() {
    this.broadcastChannel = new BroadcastChannel(this.CHANNEL_NAME);
    this.setupChannelListener();
  }

  // –°–ª—É—Ö–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —ñ–Ω—à–∏—Ö –≤–∫–ª–∞–¥–æ–∫ —á–µ—Ä–µ–∑ BroadcastChannel
  private setupChannelListener() {
    this.broadcastChannel.addEventListener('message', (event) => {
      const syncData: SyncData = event.data;
      this.handleIncomingSync(syncData);
    });
  }

  // –û–±—Ä–æ–±–∫–∞ –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
  private async handleIncomingSync(syncData: SyncData) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –Ω–µ –∞–¥–º—ñ–Ω —Ä–µ–∂–∏–º (—â–æ–± –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ —Å–∞–º–æ–≥–æ —Å–µ–±–µ)
    if (this.isAdminMode()) {
      return;
    }

    console.log(`üì• DomainSync: –û—Ç—Ä–∏–º–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ${syncData.dataType}`);

    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ IndexedDB
      const { default: indexedDBService } = await import('./IndexedDBService');
      const latestData = await indexedDBService.loadSettings(syncData.dataType);

      if (latestData) {
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
        const eventName = syncData.dataType === 'introSettings' ? 'introSettingsUpdated' : 
                         syncData.dataType === 'welcomeSettings' ? 'welcomeSettingsUpdated' : 
                         'mainPageSettingsUpdated';
        
        window.dispatchEvent(new CustomEvent(eventName, { detail: latestData }));
        
        console.log(`‚úÖ DomainSync: –£—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ${syncData.dataType}`);
      } else {
        console.log(`‚ÑπÔ∏è DomainSync: –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è ${syncData.dataType}`);
      }
    } catch (error) {
      console.error(`‚ùå DomainSync: –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ${syncData.dataType}:`, error);
    }
  }

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ)
  async syncToPublicSite(settingsType: 'mainPageSettings' | 'introSettings' | 'welcomeSettings'): Promise<boolean> {
    if (!this.isAdminMode()) {
      console.warn('‚ö†Ô∏è DomainSync: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ –∞–¥–º—ñ–Ω —Ä–µ–∂–∏–º—ñ');
      return false;
    }

    try {
      console.log(`üîÑ DomainSync: –ü–æ—á–∏–Ω–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é ${settingsType}...`);

      // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
      const syncData: SyncData = {
        timestamp: Date.now(),
        dataType: settingsType,
        action: 'sync'
      };

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ BroadcastChannel
      this.broadcastChannel.postMessage(syncData);

      console.log(`‚úÖ DomainSync: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è ${settingsType} –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
      return true;
    } catch (error) {
      console.error(`‚ùå DomainSync: –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó ${settingsType}:`, error);
      return false;
    }
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –æ–¥—Ä–∞–∑—É
  async syncAllSettings(): Promise<{ success: boolean; results: Record<string, boolean> }> {
    const results: Record<string, boolean> = {};
    
    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ IndexedDB
      const { default: indexedDBService } = await import('./IndexedDBService');
      
      // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
      const mainPageSettings = await indexedDBService.loadSettings('mainPageSettings');
      if (mainPageSettings) {
        results.mainPageSettings = await this.syncToPublicSite('mainPageSettings');
      }

      // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ —ñ–Ω—Ç—Ä–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
      const introSettings = await indexedDBService.loadSettings('introSettings');
      if (introSettings) {
        results.introSettings = await this.syncToPublicSite('introSettings');
      }

      // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ welcome –µ–∫—Ä–∞–Ω
      const welcomeSettings = await indexedDBService.loadSettings('welcomeSettings');
      if (welcomeSettings) {
        results.welcomeSettings = await this.syncToPublicSite('welcomeSettings');
      }

      const allSuccess = Object.values(results).every(result => result);
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—Å–µ —É—Å–ø—ñ—à–Ω–æ
      if (allSuccess) {
        this.updateSyncStats();
      }
      
      console.log(`üéØ DomainSync: –ü–æ–≤–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è ${allSuccess ? '—É—Å–ø—ñ—à–Ω–∞' : '–∑ –ø–æ–º–∏–ª–∫–∞–º–∏'}:`, results);
      
      return { success: allSuccess, results };
    } catch (error) {
      console.error('‚ùå DomainSync: –ü–æ–º–∏–ª–∫–∞ –ø–æ–≤–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', error);
      return { success: false, results };
    }
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –∞–¥–º—ñ–Ω —Ä–µ–∂–∏–º
  isAdminMode(): boolean {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.has('admin');
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –Ω–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
  hasUnsyncedChanges(): boolean {
    // –ú–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ —î –Ω–µ–∑–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ –∑–º—ñ–Ω–∏
    // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ timestamp –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    return true; // –ü–æ–∫–∏ —â–æ –∑–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
  getSyncStats(): { lastSyncTime: Date | null; syncCount: number } {
    const stats = localStorage.getItem('sync_stats');
    if (stats) {
      const parsed = JSON.parse(stats);
      return {
        lastSyncTime: parsed.lastSyncTime ? new Date(parsed.lastSyncTime) : null,
        syncCount: parsed.syncCount || 0
      };
    }
    return { lastSyncTime: null, syncCount: 0 };
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
  private updateSyncStats() {
    const currentStats = this.getSyncStats();
    const newStats = {
      lastSyncTime: new Date().toISOString(),
      syncCount: currentStats.syncCount + 1
    };
    localStorage.setItem('sync_stats', JSON.stringify(newStats));
  }

  // –ó–∞–∫—Ä–∏—Ç—Ç—è BroadcastChannel
  destroy() {
    if (this.broadcastChannel) {
      this.broadcastChannel.close();
    }
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É
export const domainSyncService = new DomainSyncService();
export default domainSyncService; 