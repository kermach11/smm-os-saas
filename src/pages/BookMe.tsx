import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { ArrowLeft, Calendar, Clock, CheckCircle, Euro, Shield, MessageCircle } from 'lucide-react';
import { Link } from 'react-router-dom';

// –¢–∏–ø–∏ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
interface TimeSlot {
  time: string;
  available: boolean;
  popular?: boolean;
}

interface CalendarDay {
  date: Date;
  available: boolean;
  slots: TimeSlot[];
}

const BookMe = () => {
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [selectedTime, setSelectedTime] = useState<string | null>(null);
  const [showPayment, setShowPayment] = useState(false);
  const [isBooked, setIsBooked] = useState(false);

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–Ω—ñ–≤ (–Ω–∞—Å—Ç—É–ø–Ω—ñ 30 –¥–Ω—ñ–≤, –≤–∏–∫–ª—é—á–∞—é—á–∏ –≤–∏—Ö—ñ–¥–Ω—ñ)
  const generateAvailableDays = (): CalendarDay[] => {
    const days: CalendarDay[] = [];
    const today = new Date();
    
    for (let i = 1; i <= 30; i++) {
      const date = new Date(today);
      date.setDate(today.getDate() + i);
      
      // –í–∏–∫–ª—é—á–∞—î–º–æ –≤–∏—Ö—ñ–¥–Ω—ñ
      const isWeekend = date.getDay() === 0 || date.getDay() === 6;
      
      if (!isWeekend) {
        days.push({
          date,
          available: true,
          slots: [
            { time: '09:00', available: true, popular: true },
            { time: '11:00', available: true },
            { time: '14:00', available: true, popular: true },
            { time: '16:00', available: true },
            { time: '18:00', available: true }
          ]
        });
      }
    }
    
    return days;
  };

  const [availableDays] = useState<CalendarDay[]>(generateAvailableDays());

  const handleDateSelect = (day: CalendarDay) => {
    setSelectedDate(day.date);
    setSelectedTime(null);
    setShowPayment(false);
  };

  const handleTimeSelect = (time: string) => {
    setSelectedTime(time);
  };

  const handleConfirmBooking = () => {
    setShowPayment(true);
  };

  const handlePayment = () => {
    // –°–∏–º—É–ª—è—Ü—ñ—è –æ–ø–ª–∞—Ç–∏
    setTimeout(() => {
      setIsBooked(true);
    }, 2000);
  };

  const formatDate = (date: Date) => {
    return date.toLocaleDateString('uk-UA', {
      day: 'numeric',
      month: 'long'
    });
  };

  const formatDateShort = (date: Date) => {
    return date.toLocaleDateString('uk-UA', {
      day: 'numeric',
      month: 'short'
    });
  };

  if (isBooked) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-50 flex items-center justify-center p-4">
        <motion.div
          initial={{ scale: 0.8, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          className="bg-white rounded-2xl p-8 text-center max-w-md w-full shadow-xl"
        >
          <motion.div
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ delay: 0.2, type: "spring" }}
            className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6"
          >
            <CheckCircle className="w-8 h-8 text-green-600" />
          </motion.div>
          
          <h2 className="text-2xl font-bold text-gray-900 mb-4">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ!</h2>
          <p className="text-gray-600 mb-6">
            –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Meet –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ —Ç–≤–æ—é –ø–æ—à—Ç—É. 
            –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–∏–π–¥–µ –∑–∞ 1 –≥–æ–¥–∏–Ω—É –¥–æ –¥–∑–≤—ñ–Ω–∫–∞.
          </p>
          
          <div className="bg-gray-50 rounded-lg p-4 mb-6">
            <p className="font-semibold text-gray-900">
              {selectedDate && formatDate(selectedDate)} –æ {selectedTime}
            </p>
          </div>
          
          <Link
            to="/"
            className="inline-flex items-center gap-2 bg-gray-900 text-white px-6 py-3 rounded-full hover:bg-gray-800 transition-colors"
          >
            <ArrowLeft className="w-4 h-4" />
            –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
          </Link>
        </motion.div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-white">
      {/* Header */}
      <header className="border-b border-gray-100 bg-white/80 backdrop-blur-sm sticky top-0 z-50">
        <div className="max-w-6xl mx-auto px-4 py-4 flex items-center justify-between">
          <Link
            to="/"
            className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
          >
            <ArrowLeft className="w-5 h-5" />
            <span className="font-medium">–ù–∞–∑–∞–¥</span>
          </Link>
          
          <div className="flex items-center gap-2">
            <Calendar className="w-5 h-5 text-gray-600" />
            <span className="font-semibold text-gray-900">BOOKME</span>
          </div>
        </div>
      </header>

      <div className="max-w-4xl mx-auto px-4 py-12">
        {/* Hero Block */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-16"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
            –ó–∞–±—Ä–æ–Ω—é–π —Å–≤–æ—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é ‚Äî{' '}
            <span className="text-blue-600">–±–µ–∑ –∑–∞–π–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å</span>
          </h1>
          
          <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-8 leading-relaxed">
            30 —Ö–≤–∏–ª–∏–Ω —Ñ–æ–∫—É—Å–Ω–æ—ó —Ä–æ–∑–º–æ–≤–∏ –ø—Ä–æ —Ç–≤—ñ–π Instagram, –∫–æ–Ω—Ç–µ–Ω—Ç, —Ä–µ–∫–ª–∞–º—É —á–∏ –±—Ä–µ–Ω–¥.
            <br />
            –ß—ñ—Ç–∫–æ, –ø–æ —Å–ø—Ä–∞–≤—ñ, –∑ –≥–æ—Ç–æ–≤–∏–º –ø–ª–∞–Ω–æ–º –Ω–∞ –≤–∏—Ö–æ–¥—ñ.
          </p>
          
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => document.getElementById('calendar')?.scrollIntoView({ behavior: 'smooth' })}
            className="bg-blue-600 text-white px-8 py-4 rounded-full text-lg font-semibold hover:bg-blue-700 transition-colors shadow-lg"
          >
            –û–±—Ä–∞—Ç–∏ –∑—Ä—É—á–Ω–∏–π —á–∞—Å ‚Üí
          </motion.button>
        </motion.div>

        {/* Calendar Section */}
        <motion.div
          id="calendar"
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="bg-white rounded-2xl shadow-xl p-8 mb-12"
        >
          <div className="flex items-center gap-3 mb-8">
            <Calendar className="w-6 h-6 text-blue-600" />
            <h2 className="text-2xl font-bold text-gray-900">–í–∏–±–µ—Ä–∏ –¥–∞—Ç—É —Ç–∞ —á–∞—Å</h2>
          </div>

          {/* Calendar Grid */}
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-3 mb-8">
            {availableDays.slice(0, 15).map((day, index) => (
              <motion.button
                key={index}
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
                onClick={() => handleDateSelect(day)}
                className={`p-4 rounded-xl border-2 transition-all ${
                  selectedDate?.toDateString() === day.date.toDateString()
                    ? 'border-blue-600 bg-blue-50'
                    : 'border-gray-200 hover:border-blue-300 hover:bg-blue-50'
                }`}
              >
                <div className="text-sm text-gray-500 mb-1">
                  {day.date.toLocaleDateString('uk-UA', { weekday: 'short' })}
                </div>
                <div className="font-semibold text-gray-900">
                  {formatDateShort(day.date)}
                </div>
              </motion.button>
            ))}
          </div>

          {/* Time Slots */}
          {selectedDate && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              className="border-t border-gray-100 pt-8"
            >
              <div className="flex items-center gap-3 mb-6">
                <Clock className="w-5 h-5 text-blue-600" />
                <h3 className="text-lg font-semibold text-gray-900">
                  –î–æ—Å—Ç—É–ø–Ω—ñ –≥–æ–¥–∏–Ω–∏ –Ω–∞ {formatDate(selectedDate)}
                </h3>
              </div>

              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-3 mb-8">
                {availableDays
                  .find(day => day.date.toDateString() === selectedDate.toDateString())
                  ?.slots.map((slot, index) => (
                    <motion.button
                      key={index}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={() => handleTimeSelect(slot.time)}
                      className={`relative p-4 rounded-xl border-2 transition-all ${
                        selectedTime === slot.time
                          ? 'border-blue-600 bg-blue-50'
                          : 'border-gray-200 hover:border-blue-300 hover:bg-blue-50'
                      }`}
                    >
                      {slot.popular && (
                        <div className="absolute -top-2 -right-2 bg-orange-500 text-white text-xs px-2 py-1 rounded-full">
                          üî•
                        </div>
                      )}
                      <div className="font-semibold text-gray-900">{slot.time}</div>
                    </motion.button>
                  ))}
              </div>

              {selectedTime && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="bg-gray-50 rounded-xl p-6"
                >
                  <div className="flex items-center justify-between mb-4">
                    <div>
                      <h4 className="font-semibold text-gray-900 mb-1">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –æ–±—Ä–∞–Ω–∞</h4>
                      <p className="text-gray-600">
                        {formatDate(selectedDate)} –æ {selectedTime}
                      </p>
                    </div>
                    <div className="text-right">
                      <div className="flex items-center gap-1 text-2xl font-bold text-gray-900">
                        <Euro className="w-6 h-6" />
                        39
                      </div>
                      <div className="text-sm text-gray-500">30 —Ö–≤–∏–ª–∏–Ω</div>
                    </div>
                  </div>

                  <div className="flex items-center gap-2 text-sm text-gray-600 mb-6">
                    <Shield className="w-4 h-4" />
                    <span>–û–ø–ª–∞—Ç–∞ –∑–∞—Ö–∏—â–µ–Ω–∞ (Stripe)</span>
                  </div>

                  <motion.button
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    onClick={handleConfirmBooking}
                    className="w-full bg-blue-600 text-white py-4 rounded-xl font-semibold hover:bg-blue-700 transition-colors"
                  >
                    –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
                  </motion.button>
                </motion.div>
              )}
            </motion.div>
          )}
        </motion.div>

        {/* Payment Modal */}
        {showPayment && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50"
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              className="bg-white rounded-2xl p-8 max-w-md w-full"
            >
              <h3 className="text-xl font-bold text-gray-900 mb-6">–û–ø–ª–∞—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó</h3>
              
              <div className="bg-gray-50 rounded-lg p-4 mb-6">
                <div className="flex justify-between items-center mb-2">
                  <span className="text-gray-600">–î–∞—Ç–∞ —Ç–∞ —á–∞—Å:</span>
                  <span className="font-semibold">
                    {selectedDate && formatDateShort(selectedDate)} –æ {selectedTime}
                  </span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">–í–∞—Ä—Ç—ñ—Å—Ç—å:</span>
                  <span className="font-bold text-xl">39 ‚Ç¨</span>
                </div>
              </div>

              <div className="space-y-4 mb-6">
                <input
                  type="email"
                  placeholder="–¢–≤–æ—è –ø–æ—à—Ç–∞"
                  className="w-full p-4 border border-gray-200 rounded-lg focus:border-blue-600 focus:outline-none"
                />
                <input
                  type="text"
                  placeholder="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏"
                  className="w-full p-4 border border-gray-200 rounded-lg focus:border-blue-600 focus:outline-none"
                />
                <div className="grid grid-cols-2 gap-4">
                  <input
                    type="text"
                    placeholder="MM/YY"
                    className="p-4 border border-gray-200 rounded-lg focus:border-blue-600 focus:outline-none"
                  />
                  <input
                    type="text"
                    placeholder="CVV"
                    className="p-4 border border-gray-200 rounded-lg focus:border-blue-600 focus:outline-none"
                  />
                </div>
              </div>

              <div className="flex gap-3">
                <button
                  onClick={() => setShowPayment(false)}
                  className="flex-1 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  –°–∫–∞—Å—É–≤–∞—Ç–∏
                </button>
                <button
                  onClick={handlePayment}
                  className="flex-1 bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors"
                >
                  –û–ø–ª–∞—Ç–∏—Ç–∏ 39 ‚Ç¨
                </button>
              </div>
            </motion.div>
          </motion.div>
        )}

        {/* What's Included */}
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4 }}
          className="bg-white rounded-2xl shadow-xl p-8 mb-12"
        >
          <h2 className="text-2xl font-bold text-gray-900 mb-8 text-center">
            –©–æ —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –∑–∞ 30 —Ö–≤–∏–ª–∏–Ω
          </h2>

          <div className="grid md:grid-cols-2 gap-6">
            {[
              '–ê—É–¥–∏—Ç Instagram / TikTok',
              '–ü–æ—Ä–∞–¥–∏ –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É, —Ä–µ–∫–ª–∞–º—ñ, —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó',
              '–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —á–µ–∫-–ª–∏—Å—Ç –Ω–∞ 7 –¥–Ω—ñ–≤',
              '–í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —Ç–≤–æ—ó –∑–∞–ø–∏—Ç–∞–Ω–Ω—è'
            ].map((item, index) => (
              <div key={index} className="flex items-center gap-3">
                <CheckCircle className="w-5 h-5 text-green-600 flex-shrink-0" />
                <span className="text-gray-700">{item}</span>
              </div>
            ))}
          </div>

          <div className="mt-8 p-4 bg-green-50 rounded-lg text-center">
            <p className="text-green-800 font-medium">
              üïê –Ø–∫—â–æ –Ω–µ –æ—Ç—Ä–∏–º–∞—î—à —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ ‚Äì –ø–æ–≤–µ—Ä–Ω—É –≥—Ä–æ—à—ñ –±–µ–∑ –ø–∏—Ç–∞–Ω—å.
            </p>
          </div>
        </motion.div>

        {/* FAQ */}
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
          className="bg-white rounded-2xl shadow-xl p-8"
        >
          <h2 className="text-2xl font-bold text-gray-900 mb-8 text-center">
            –ü–æ—à–∏—Ä–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
          </h2>

          <div className="space-y-6">
            {[
              {
                question: '–ê —è–∫—â–æ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≥–æ–¥–∏–Ω–∞?',
                answer: '–ú–æ–∂–µ—à –Ω–∞–ø–∏—Å–∞—Ç–∏ –º–µ–Ω—ñ –≤ Telegram ‚Äî –∑—Ä–æ–±–∏–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É —Å–µ—Å—ñ—é.'
              },
              {
                question: '–Ø–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∑–≤—ñ–Ω–∫–∞?',
                answer: 'Google Meet. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞—î—à –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏.'
              },
              {
                question: '–ê —è–∫—â–æ —è –Ω–µ –º–æ–∂—É –∑ º—è–≤–∏—Ç–∏—Å—è?',
                answer: '–ù–∞–ø–∏—à–∏ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ ‚Äî –ø–µ—Ä–µ–Ω–µ—Å–µ–º–æ. –ë–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è ‚Äî –±—Ä–æ–Ω—å –∑–≥–æ—Ä–∞—î.'
              }
            ].map((faq, index) => (
              <div key={index} className="border-b border-gray-100 pb-6 last:border-b-0">
                <div className="flex items-start gap-3">
                  <MessageCircle className="w-5 h-5 text-blue-600 mt-1 flex-shrink-0" />
                  <div>
                    <h3 className="font-semibold text-gray-900 mb-2">{faq.question}</h3>
                    <p className="text-gray-600">{faq.answer}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </motion.div>

        {/* Warning */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
          className="mt-8 p-4 bg-orange-50 border border-orange-200 rounded-lg text-center"
        >
          <p className="text-orange-800 text-sm">
            ‚ö†Ô∏è <strong>–£–≤–∞–≥–∞:</strong> —è–∫—â–æ –Ω–µ –∑ º—è–≤–∏—à—Å—è ‚Äî –±—Ä–æ–Ω—å –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è. –ü–æ–≤–∞–∂–∞–π —Å–≤—ñ–π —ñ –º—ñ–π —á–∞—Å.
          </p>
        </motion.div>
      </div>

      {/* Sticky Mobile CTA */}
      <div className="fixed bottom-0 left-0 right-0 p-4 bg-white border-t border-gray-200 md:hidden">
        <motion.button
          whileHover={{ scale: 1.02 }}
          whileTap={{ scale: 0.98 }}
          onClick={() => document.getElementById('calendar')?.scrollIntoView({ behavior: 'smooth' })}
          className="w-full bg-blue-600 text-white py-4 rounded-xl font-semibold flex items-center justify-center gap-2"
        >
          <Euro className="w-5 h-5" />
          –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é ‚Äì 39 ‚Ç¨
        </motion.button>
      </div>
    </div>
  );
};

export default BookMe; 