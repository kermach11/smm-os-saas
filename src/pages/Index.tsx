import { useState, useEffect, createContext, useContext } from "react";
import { AnimatePresence, motion } from "framer-motion";
// –ó–∞—Å—Ç–∞—Ä—ñ–ª—ñ —ñ–º–ø–æ—Ä—Ç–∏ –∞—É–¥—ñ–æ –≤–∏–¥–∞–ª–µ–Ω—ñ - —Ç–µ–ø–µ—Ä –≤—Å—è –º—É–∑–∏–∫–∞ –∫–µ—Ä—É—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏
import indexedDBService from '../services/IndexedDBService';
import syncService from '../services/SyncService';
import domainSyncService from '../services/DomainSyncService';
import { webAudioManager } from '../utils/webAudioUtils';

// üöÄ Global Spline Preloader –¥–ª—è –º–∏—Ç—Ç—î–≤–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
const SPLINE_SCENE_URL = "https://prod.spline.design/Li0xtQwxHAu6qXGd/scene.splinecode";

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π preload –¥–ª—è Spline —Å—Ü–µ–Ω–∏
const preloadSplineScene = async () => {
  try {
    console.log('üöÄ Index: –ó–∞–ø—É—Å–∫ preload –¥–ª—è Spline —Å—Ü–µ–Ω–∏...');
    
    // Preconnect –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
    const preconnectLink = document.createElement('link');
    preconnectLink.rel = 'preconnect';
    preconnectLink.href = 'https://prod.spline.design';
    document.head.appendChild(preconnectLink);
    
    // Prefetch —Å–∞–º–æ—ó —Å—Ü–µ–Ω–∏
    const prefetchLink = document.createElement('link');
    prefetchLink.rel = 'prefetch';
    prefetchLink.href = SPLINE_SCENE_URL;
    document.head.appendChild(prefetchLink);
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π fetch –¥–ª—è –∫–µ—à—É–≤–∞–Ω–Ω—è
    fetch(SPLINE_SCENE_URL, { 
      method: 'GET',
      mode: 'cors',
      cache: 'force-cache'
    }).then(() => {
      console.log('‚úÖ Index: Spline —Å—Ü–µ–Ω–∞ preload –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }).catch(() => {
      console.log('‚ö†Ô∏è Index: Spline preload –Ω–µ –≤–¥–∞–≤—Å—è (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
    });

    // üöÄ –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ Service Worker –ø—Ä–æ prefetch
    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
      navigator.serviceWorker.controller.postMessage({
        type: 'PREFETCH_SPLINE',
        urls: [SPLINE_SCENE_URL]
      });
    }

    // üéØ WebGL Context Warmup –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ —Å—Ç–∞—Ä—Ç—É 3D
    try {
      const canvas = document.createElement('canvas');
      const gl = canvas.getContext('webgl2') || canvas.getContext('webgl');
      if (gl) {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ WebGL —Ä–µ—Å—É—Ä—Å–∏
        const shader = gl.createShader(gl.VERTEX_SHADER);
        gl.deleteShader(shader);
        console.log('‚úÖ Index: WebGL context –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ');
      }
    } catch (error) {
      console.log('‚ö†Ô∏è Index: WebGL warmup –Ω–µ –≤–¥–∞–≤—Å—è:', error);
    }
    
  } catch (error) {
    console.log('‚ö†Ô∏è Index: –ü–æ–º–∏–ª–∫–∞ Spline preload:', error);
  }
};

// Screen components
import IntroScreen from "../components/IntroScreen";
import MainScreen from "../components/MainScreen";
import WelcomeScreen from "../components/WelcomeScreen";
import { useGlobalAudio } from '../hooks/useGlobalAudio';

// Audio context for global sound management
interface AudioContextType {
  isPlaying: boolean;
  toggle: () => void;
  isLoaded: boolean;
  canAutoPlay: boolean;
}

const AudioContext = createContext<AudioContextType | null>(null);

// –•—É–∫ –≤–∏–Ω–µ—Å–µ–Ω–æ –≤ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è HMR –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
// –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ó–∞–≤–∂–¥–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –∑ Welcome –µ–∫—Ä–∞–Ω—É –ø—Ä–∏ —Å–≤—ñ–∂–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
let hasInitialLoadCompleted = false;

const Index = () => {
  const [screenState, setScreenState] = useState<'welcome' | 'intro' | 'main'>(() => {
    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ó–∞–≤–∂–¥–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –∑ Welcome –µ–∫—Ä–∞–Ω—É –ø—Ä–∏ —Å–≤—ñ–∂–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
    return 'welcome';
  });

  const [welcomeSettings, setWelcomeSettings] = useState<any>(null);
  const [userInteracted, setUserInteracted] = useState(() => {
    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ó–∞–≤–∂–¥–∏ –ø–æ—á–∏–Ω–∞—î–º–æ –∑ false –ø—Ä–∏ —Å–≤—ñ–∂–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
    return false;
  });

  // Global audio management with auto-play disabled
  const { isPlaying, isLoaded, canAutoPlay, toggle, play } = useGlobalAudio();

  // –°—Ç–∞–Ω –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–≥–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è
  const [isTransitioning, setIsTransitioning] = useState(false);
  
  // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ "–∑–∞—Å—Ç—Ä—è–≥–∞–Ω–Ω—è" –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
  useEffect(() => {
    if (isTransitioning) {
      const clearTransitionTimer = setTimeout(() => {
        console.log('üõ°Ô∏è Index: –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –∑–∞—Å—Ç—Ä—è–≥–∞–Ω–Ω—è - –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è');
        setIsTransitioning(false);
      }, 2000); // 2 —Å–µ–∫—É–Ω–¥–∏ –º–∞–∫—Å–∏–º—É–º (–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É 300ms + 300ms)
      
      return () => clearTimeout(clearTransitionTimer);
    }
  }, [isTransitioning]);

  // üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ preload Spline —Å—Ü–µ–Ω–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–±–µ–∑ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è UI)
  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ preload –≤ –º—ñ–∫—Ä–æ—Ç–∞—Å–∫—É —â–æ–± –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–µ–Ω–¥–µ—Ä
    Promise.resolve().then(() => {
      preloadSplineScene();
    });
  }, []);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–µ–≤—é —á–µ—Ä–µ–∑ IndexedDB
  useEffect(() => {
    const loadWelcomeSettings = async () => {
      try {
        console.log('üîÑ Index: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Welcome —á–µ—Ä–µ–∑ IndexedDBService...');
        
        // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ IndexedDB
        let indexedDBSettings = await indexedDBService.loadSettings('welcomeSettings');
        
        // –Ø–∫—â–æ –Ω–µ–º–∞—î –ª–æ–∫–∞–ª—å–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —ñ —Ü–µ –Ω–µ –∞–¥–º—ñ–Ω —Ä–µ–∂–∏–º, –ª–æ–≥—É—î–º–æ —Ü–µ
        if (!indexedDBSettings && !domainSyncService.isAdminMode()) {
          console.log('üîÑ Index: –õ–æ–∫–∞–ª—å–Ω—ñ Welcome –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –ø—É–±–ª—ñ—á–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ');
          // –í Domain-based —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ localStorage events
        }
        
        if (indexedDBSettings) {
          console.log('‚úÖ Index: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Welcome –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ IndexedDB');
          setWelcomeSettings(indexedDBSettings);
        } else {
          // –Ø–∫—â–æ IndexedDB –ø–æ—Ä–æ–∂–Ω—ñ–π, –ø—Ä–æ–±—É—î–º–æ localStorage —è–∫ —Ä–µ–∑–µ—Ä–≤
          console.log('‚ÑπÔ∏è Index: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Welcome –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ IndexedDB, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ localStorage...');
          const savedSettings = localStorage.getItem('welcomeSettings');
          if (savedSettings) {
            const parsed = JSON.parse(savedSettings);
            console.log('‚úÖ Index: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Welcome –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage');
            setWelcomeSettings(parsed);
            
            // –ú—ñ–≥—Ä—É—î–º–æ –≤ IndexedDB
            console.log('üîÑ Index: –ú—ñ–≥—Ä–∞—Ü—ñ—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Welcome –≤ IndexedDB...');
            await indexedDBService.saveSettings('welcomeSettings', parsed, 'project');
            console.log('‚úÖ Index: –ú—ñ–≥—Ä–∞—Ü—ñ—è Welcome –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
          }
        }
      } catch (error) {
        console.error('‚ùå Index: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Welcome:', error);
      } finally {
        // –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ
      }
    };

    loadWelcomeSettings();

    // –°–ª—É—Ö–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    const handleSettingsUpdate = (event: CustomEvent) => {
      setWelcomeSettings(event.detail);
    };

    window.addEventListener('welcomeSettingsUpdated', handleSettingsUpdate as EventListener);
    
    return () => {
      window.removeEventListener('welcomeSettingsUpdated', handleSettingsUpdate as EventListener);
    };
  }, []);

  // Handle welcome screen completion (user tapped to enter)
  const handleWelcomeComplete = async () => {
    console.log('üéµ UnifiedPage: –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è Welcome –µ–∫—Ä–∞–Ω—É');
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    if (screenState !== 'main') {
      setIsTransitioning(true);
    }
    
    // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –≤–∑–∞—î–º–æ–¥—ñ—è–≤ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é
    setUserInteracted(true);
    
    try {
      // –ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –≤–∏–∫–æ–Ω—É—î–º–æ –≤—Å—ñ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
      const [mainSettings] = await Promise.all([
        indexedDBService.loadSettings('mainPageSettings'),
        // –î–æ–¥–∞—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç—ñ
        new Promise(resolve => setTimeout(resolve, 300))
      ]);
      
      const backgroundMusic = mainSettings?.audioSettings?.backgroundMusic;
      
      // –û–±—Ä–æ–±–∫–∞ –∞—É–¥—ñ–æ –≤ background (–Ω–µ –±–ª–æ–∫—É—î –ø–µ—Ä–µ—Ö—ñ–¥)
      Promise.resolve().then(async () => {
        if (backgroundMusic?.enabled && backgroundMusic?.autoStartAfterWelcome) {
          console.log('üéµ Index: –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç—ñ–π–Ω–æ—ó —Ñ–æ–Ω–æ–≤–æ—ó –º—É–∑–∏–∫–∏ –ø—ñ—Å–ª—è Welcome');
          if (backgroundMusic?.url) {
            try {
              await webAudioManager.loadAudio(backgroundMusic.url, 'background-music');
              await webAudioManager.playAudio('background-music', {
                loop: backgroundMusic.loop,
                volume: backgroundMusic.volume
              });
              console.log('‚úÖ Index: –§–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –ø—ñ—Å–ª—è Welcome');
            } catch (error) {
              console.log('‚ö†Ô∏è Index: –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É:', error);
            }
          }
        }
        
        // –ó—É–ø–∏–Ω—è—î–º–æ Welcome –º—É–∑–∏–∫—É
        const welcomeAudio = document.querySelectorAll('audio');
        welcomeAudio.forEach(audio => {
          if (!audio.paused) {
            audio.pause();
            audio.currentTime = 0;
            console.log('üîá Index: –ó—É–ø–∏–Ω–µ–Ω–æ Welcome –∞—É–¥—ñ–æ');
          }
        });
      });
      
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–æ–≤–∞–Ω–∏–π —Ç–∞–π–º–∏–Ω–≥: 300ms –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
      setTimeout(() => {
        setScreenState('intro');
        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 300ms (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ Framer Motion)
        setTimeout(() => {
          setIsTransitioning(false);
        }, 300);
      }, 300);
      
    } catch (error) {
      console.error('‚ùå Index: –ü–æ–º–∏–ª–∫–∞ –≤ handleWelcomeComplete:', error);
      // Fallback: –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      setTimeout(() => {
        setScreenState('intro');
        setTimeout(() => {
          setIsTransitioning(false);
        }, 300);
      }, 300);
    }
  };

  // Handle intro screen completion
  const handleIntroComplete = async () => {
    console.log('üéµ Index: –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è Intro –µ–∫—Ä–∞–Ω—É');
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ MainScreen
    setIsTransitioning(true);
    
    try {
      // –ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –≤–∏–∫–æ–Ω—É—î–º–æ –≤—Å—ñ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
      const [mainSettings] = await Promise.all([
        indexedDBService.loadSettings('mainPageSettings'),
        // –î–æ–¥–∞—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç—ñ
        new Promise(resolve => setTimeout(resolve, 300))
      ]);
      
      const backgroundMusic = mainSettings?.audioSettings?.backgroundMusic;
      
      // –û–±—Ä–æ–±–∫–∞ –∞—É–¥—ñ–æ –≤ background (–Ω–µ –±–ª–æ–∫—É—î –ø–µ—Ä–µ—Ö—ñ–¥)
      Promise.resolve().then(async () => {
        if (backgroundMusic?.enabled && backgroundMusic?.autoStartAfterWelcome) {
          console.log('üéµ Index: –†–µ–∂–∏–º –ø–æ—Å—Ç—ñ–π–Ω–æ—ó —Ñ–æ–Ω–æ–≤–æ—ó –º—É–∑–∏–∫–∏ - –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É');
          if (backgroundMusic?.url) {
            try {
              await webAudioManager.loadAudio(backgroundMusic.url, 'background-music');
              await webAudioManager.playAudio('background-music', {
                loop: backgroundMusic.loop,
                volume: backgroundMusic.volume
              });
              console.log('‚úÖ Index: –§–æ–Ω–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –ø—ñ—Å–ª—è Intro');
            } catch (error) {
              console.log('‚ö†Ô∏è Index: –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ñ–æ–Ω–æ–≤—É –º—É–∑–∏–∫—É:', error);
            }
          }
        }
        
        // –ó—É–ø–∏–Ω—è—î–º–æ Intro –º—É–∑–∏–∫—É
        const introAudio = document.querySelectorAll('audio');
        introAudio.forEach(audio => {
          if (!audio.paused) {
            audio.pause();
            audio.currentTime = 0;
          }
        });
      });
      
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–æ–≤–∞–Ω–∏–π —Ç–∞–π–º–∏–Ω–≥: 300ms –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É
      setTimeout(() => {
        setScreenState('main');
        hasInitialLoadCompleted = true;
        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 300ms (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ Framer Motion)
        setTimeout(() => {
          setIsTransitioning(false);
        }, 300);
      }, 300);
      
    } catch (error) {
      console.error('‚ùå Index: –ü–æ–º–∏–ª–∫–∞ –≤ handleIntroComplete:', error);
      // Fallback: –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      setTimeout(() => {
        setScreenState('main');
        hasInitialLoadCompleted = true;
        setTimeout(() => {
          setIsTransitioning(false);
        }, 300);
      }, 300);
    }
  };

  // Fallback: Try to start audio on any user interaction (if not started yet)
  useEffect(() => {
    const handleFirstInteraction = async () => {
      // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∑–∞—î–º–æ–¥—ñ—è–≤ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é
      if (!userInteracted) {
        setUserInteracted(true);
      }
      
      const hasCustomMusic = welcomeSettings?.hasMusic && welcomeSettings?.musicUrl;
      
      if (!hasCustomMusic && isLoaded && !canAutoPlay && !isPlaying && screenState !== 'welcome') {
        await play();
      }
    };

    // Listen for first user interaction
    const events = ['click', 'touchstart', 'keydown'];
    events.forEach(event => {
      document.addEventListener(event, handleFirstInteraction, { once: true });
    });

    return () => {
      events.forEach(event => {
        document.removeEventListener(event, handleFirstInteraction);
      });
    };
  }, [isLoaded, canAutoPlay, isPlaying, play, screenState, welcomeSettings, userInteracted]);

  // –ù–û–í–ê –õ–û–ì–Ü–ö–ê –ú–£–ó–ò–ö–ò: –ó–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è autoStartAfterWelcome
  useEffect(() => {
    const handleMainScreenMusic = async () => {
      if (screenState === 'main') {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        const mainSettings = await indexedDBService.loadSettings('mainPageSettings');
        const backgroundMusic = mainSettings?.audioSettings?.backgroundMusic;
        
        if (backgroundMusic?.enabled && backgroundMusic?.autoStartAfterWelcome) {
          console.log('üéµ Index: –†–µ–∂–∏–º –ø–æ—Å—Ç—ñ–π–Ω–æ—ó —Ñ–æ–Ω–æ–≤–æ—ó –º—É–∑–∏–∫–∏ —É–≤—ñ–º–∫–Ω–µ–Ω–æ');
          // –ù–µ –∑—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä—É –º—É–∑–∏–∫—É, –≤–æ–Ω–∞ –≥—Ä–∞—î –ø–æ—Å—Ç—ñ–π–Ω–æ
        } else {
          console.log('üéµ Index: –†–µ–∂–∏–º –æ–∫—Ä–µ–º–æ—ó –º—É–∑–∏–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–∫—Ä–∞–Ω—É');
          // –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä—É –≥–ª–æ–±–∞–ª—å–Ω—É –º—É–∑–∏–∫—É
          if (isPlaying) {
            toggle(); // –¶–µ –∑—É–ø–∏–Ω–∏—Ç—å —Å—Ç–∞—Ä—É –º—É–∑–∏–∫—É
          }
        }
        
        // –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ —â–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        if (isTransitioning) {
          console.log('üõ°Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–º–∏–∫–∞—î–º–æ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ');
          setIsTransitioning(false);
        }
      }
    };
    
    handleMainScreenMusic();
  }, [screenState, isPlaying, toggle, isTransitioning]);

  // üé¨ –¶–ï–ù–¢–†–ê–õ–Ü–ó–û–í–ê–ù–ê –ú–ï–î–Ü–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –¥–ª—è Unified Page
  useEffect(() => {
    const initializeAllMedia = async () => {
      console.log('üé¨ UnifiedPage: –ü–æ—á–∞—Ç–æ–∫ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–µ–¥—ñ–∞');
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–¥–Ω–æ—á–∞—Å–Ω–æ
      const [welcomeSettings, introSettings, mainSettings] = await Promise.all([
        indexedDBService.loadSettings('welcomeSettings'),
        indexedDBService.loadSettings('introSettings'), 
        indexedDBService.loadSettings('mainPageSettings')
      ]);
      
      const mediaPromises: Promise<void>[] = [];
      
      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Welcome –≤—ñ–¥–µ–æ
      if (welcomeSettings?.backgroundType === 'video' && welcomeSettings?.backgroundVideo) {
        console.log('üé¨ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Welcome –≤—ñ–¥–µ–æ');
        mediaPromises.push(preloadVideo(welcomeSettings.backgroundVideo, 'welcome'));
      }
      
      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Intro –≤—ñ–¥–µ–æ
      if (introSettings?.backgroundType === 'video' && introSettings?.backgroundVideo) {
        console.log('üé¨ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Intro –≤—ñ–¥–µ–æ');
        mediaPromises.push(preloadVideo(introSettings.backgroundVideo, 'intro'));
      }
      
      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Main –≤—ñ–¥–µ–æ
      if (mainSettings?.backgroundSettings?.backgroundType === 'video' && mainSettings?.backgroundSettings?.backgroundVideo) {
        console.log('üé¨ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Main –≤—ñ–¥–µ–æ');
        mediaPromises.push(preloadVideo(mainSettings.backgroundSettings.backgroundVideo, 'main'));
      }
      
      // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –≤—Å—ñ –∞—É–¥—ñ–æ
      if (welcomeSettings?.hasMusic && welcomeSettings?.musicUrl) {
        console.log('üéµ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Welcome –∞—É–¥—ñ–æ');
        mediaPromises.push(preloadAudio(welcomeSettings.musicUrl, 'welcome'));
      }
      
      if (introSettings?.hasMusic && introSettings?.musicUrl) {
        console.log('üéµ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Intro –∞—É–¥—ñ–æ');
        mediaPromises.push(preloadAudio(introSettings.musicUrl, 'intro'));
      }
      
      if (mainSettings?.backgroundSettings?.hasMusic && mainSettings?.backgroundSettings?.musicUrl) {
        console.log('üéµ UnifiedPage: –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Main –∞—É–¥—ñ–æ');
        mediaPromises.push(preloadAudio(mainSettings.backgroundSettings.musicUrl, 'main'));
      }
      
      // –ß–µ–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –º–µ–¥—ñ–∞
      try {
        await Promise.all(mediaPromises);
        console.log('‚úÖ UnifiedPage: –í—Å—ñ –º–µ–¥—ñ–∞ —É—Å–ø—ñ—à–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ');
      } catch (error) {
        console.log('‚ö†Ô∏è UnifiedPage: –î–µ—è–∫—ñ –º–µ–¥—ñ–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—è:', error);
      }
    };
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø—ñ—Å–ª—è –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    initializeAllMedia();
  }, []);
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ
  const preloadVideo = async (videoUrl: string, context: string): Promise<void> => {
    return new Promise((resolve) => {
      const video = document.createElement('video');
      video.src = videoUrl;
      video.muted = true;
      video.playsInline = true;
      video.preload = 'auto';
      video.style.display = 'none';
      
      // –î–æ–¥–∞—î–º–æ –º–æ–±—ñ–ª—å–Ω—ñ –∞—Ç—Ä–∏–±—É—Ç–∏
      video.setAttribute('webkit-playsinline', 'true');
      video.setAttribute('playsinline', 'true');
      
      const onLoad = () => {
        console.log(`‚úÖ UnifiedPage: ${context} –≤—ñ–¥–µ–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:`, videoUrl);
        video.removeEventListener('loadeddata', onLoad);
        video.removeEventListener('error', onError);
        resolve();
      };
      
      const onError = () => {
        console.log(`‚ö†Ô∏è UnifiedPage: ${context} –≤—ñ–¥–µ–æ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è:`, videoUrl);
        video.removeEventListener('loadeddata', onLoad);
        video.removeEventListener('error', onError);
        resolve(); // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      };
      
      video.addEventListener('loadeddata', onLoad);
      video.addEventListener('error', onError);
      
      // –î–æ–¥–∞—î–º–æ –¥–æ DOM –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      document.body.appendChild(video);
      
      // –í–∏–¥–∞–ª—è—î–º–æ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      setTimeout(() => {
        if (document.body.contains(video)) {
          document.body.removeChild(video);
        }
      }, 5000);
    });
  };
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞—É–¥—ñ–æ
  const preloadAudio = async (audioUrl: string, context: string): Promise<void> => {
    return new Promise((resolve) => {
      const audio = document.createElement('audio');
      audio.src = audioUrl;
      audio.preload = 'auto';
      audio.style.display = 'none';
      
      const onLoad = () => {
        console.log(`‚úÖ UnifiedPage: ${context} –∞—É–¥—ñ–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:`, audioUrl);
        audio.removeEventListener('loadeddata', onLoad);
        audio.removeEventListener('error', onError);
        resolve();
      };
      
      const onError = () => {
        console.log(`‚ö†Ô∏è UnifiedPage: ${context} –∞—É–¥—ñ–æ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è:`, audioUrl);
        audio.removeEventListener('loadeddata', onLoad);
        audio.removeEventListener('error', onError);
        resolve(); // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      };
      
      audio.addEventListener('loadeddata', onLoad);
      audio.addEventListener('error', onError);
      
      // –î–æ–¥–∞—î–º–æ –¥–æ DOM –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      document.body.appendChild(audio);
      
      // –í–∏–¥–∞–ª—è—î–º–æ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      setTimeout(() => {
        if (document.body.contains(audio)) {
          document.body.removeChild(audio);
        }
      }, 5000);
    });
  };

  const audioContextValue = {
    isPlaying,
    toggle,
    isLoaded,
    canAutoPlay
  };

  return (
    <AudioContext.Provider value={audioContextValue}>
      <div className="w-full h-screen overflow-x-hidden lg:overflow-hidden" style={{ backgroundColor: screenState === 'main' ? 'transparent' : 'black' }}>
        {/* üé¨ UNIFIED PAGE APPROACH - –í—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —Ä–µ–Ω–¥–µ—Ä—è—Ç—å—Å—è –æ–¥–Ω–æ—á–∞—Å–Ω–æ */}
        {/* Welcome Screen - –∑–∞–≤–∂–¥–∏ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è, –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è —É–º–æ–≤–Ω–æ */}
        <WelcomeScreen 
          visible={screenState === 'welcome' && !hasInitialLoadCompleted}
          onComplete={handleWelcomeComplete}
          isAudioLoaded={isLoaded}
          settings={welcomeSettings}
        />
        
        {/* Intro Screen - –∑–∞–≤–∂–¥–∏ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è, –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è —É–º–æ–≤–Ω–æ */}
        <IntroScreen 
          visible={screenState === 'intro' && !hasInitialLoadCompleted}
          onComplete={handleIntroComplete} 
        />
        
        {/* Main Screen - –∑–∞–≤–∂–¥–∏ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è, –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è —É–º–æ–≤–Ω–æ */}
        <MainScreen 
          visible={screenState === 'main' || hasInitialLoadCompleted}
          userInteracted={userInteracted} 
        />
        
        {/* –ó–∞—Ç–µ–º–Ω–µ–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ö–æ–¥—É - –∑ AnimatePresence –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ exit */}
        <AnimatePresence>
          {isTransitioning && (
            <motion.div
              key="transition-overlay"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.3, ease: "easeInOut" }}
              className="fixed inset-0 bg-black z-[100] pointer-events-none"
              style={{
                backgroundColor: '#000000'
              }}
            />
          )}
        </AnimatePresence>
      </div>
    </AudioContext.Provider>
  );
};

export default Index;
