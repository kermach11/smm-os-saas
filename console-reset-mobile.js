// –ü—Ä–æ—Å—Ç–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω—Å–æ–ª—ñ –±—Ä–∞—É–∑–µ—Ä–∞ - —Å–∫–æ–ø—ñ—é–π—Ç–µ —ñ –≤—Å—Ç–∞–≤—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó

(function() {
  console.log('üîÑ –°–∫–∏–¥–∞–Ω–Ω—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø–æ–∑–∏—Ü—ñ–π...');
  
  // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ IndexedDB
  const request = indexedDB.open('SmartContentDB', 1);
  
  request.onsuccess = function(event) {
    const db = event.target.result;
    const transaction = db.transaction(['settings'], 'readwrite');
    const store = transaction.objectStore('settings');
    
    // –û—Ç—Ä–∏–º—É—î–º–æ boxPositions
    const getRequest = store.get('boxPositions');
    
    getRequest.onsuccess = function() {
      const result = getRequest.result;
      
      if (result && result.data) {
        const boxPositions = result.data;
        
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –º–æ–±—ñ–ª—å–Ω—ñ –∫–ª—é—á—ñ
        const mobileKeys = Object.keys(boxPositions).filter(key => key.includes('_mobile'));
        
        mobileKeys.forEach(key => {
          delete boxPositions[key];
        });
        
        console.log('üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ:', mobileKeys);
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ
        const putRequest = store.put({
          ...result,
          data: boxPositions,
          timestamp: Date.now()
        });
        
        putRequest.onsuccess = function() {
          console.log('‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É...');
          setTimeout(() => window.location.reload(), 1000);
        };
        
      } else {
        console.log('‚ÑπÔ∏è –ü–æ–∑–∏—Ü—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      }
    };
  };
  
  request.onerror = function() {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');
  };
})();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∞–¥–º–∏–Ω-–Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ localStorage
function clearAdminSettings() {
  try {
    // –û—á–∏—â–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ showAdminButton –∏–∑ localStorage
    const savedData = localStorage.getItem('immersiveExperienceData');
    if (savedData) {
      const data = JSON.parse(savedData);
      if (data.adminSettings?.showAdminButton) {
        delete data.adminSettings.showAdminButton;
        localStorage.setItem('immersiveExperienceData', JSON.stringify(data));
        console.log('üîß –û—á–∏—â–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É showAdminButton –∏–∑ localStorage');
      }
    }
    
    // –û—á–∏—â–∞–µ–º –∞–¥–º–∏–Ω-—Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if (localStorage.getItem('adminSession')) {
      localStorage.removeItem('adminSession');
      console.log('üîß –û—á–∏—â–µ–Ω–∞ –∞–¥–º–∏–Ω-—Å–µ—Å—Å–∏—è');
    }
    
    console.log('‚úÖ –ê–¥–º–∏–Ω-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–∏—â–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∞–¥–º–∏–Ω-–Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
  }
} 