// –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ .env —Ñ–∞–π–ª—É
import fs from 'fs';

console.log('üîç –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç .env.local —Ñ–∞–π–ª—É');

try {
  const envContent = fs.readFileSync('.env.local', 'utf8');
  console.log('üìÑ –í–º—ñ—Å—Ç —Ñ–∞–π–ª—É:');
  console.log(envContent);
  
  console.log('\nüîç –ü–æ—à—É–∫ PocketBase –∑–º—ñ–Ω–Ω–∏—Ö:');
  const lines = envContent.split('\n');
  
  lines.forEach((line, index) => {
    if (line.includes('VITE_POCKETBASE') || line.includes('POCKETBASE_ADMIN')) {
      console.log(`–õ—ñ–Ω—ñ—è ${index + 1}: ${line}`);
    }
  });
  
  // –ü–∞—Ä—Å–∏–º–æ –∑–º—ñ–Ω–Ω—ñ
  const envVars = {};
  lines.forEach(line => {
    line = line.trim();
    if (line && !line.startsWith('#') && line.includes('=')) {
      const [key, ...valueParts] = line.split('=');
      if (key && valueParts.length > 0) {
        envVars[key.trim()] = valueParts.join('=').trim();
      }
    }
  });
  
  console.log('\nüìã –ó–Ω–∞–π–¥–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ:');
  Object.entries(envVars).forEach(([key, value]) => {
    if (key.includes('POCKET')) {
      console.log(`${key}: ${value}`);
    }
  });
  
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
}

