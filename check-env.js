// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è environment –∑–º—ñ–Ω–Ω–∏—Ö
// –ó–∞–ø—É—Å–∫: node check-env.js

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

class EnvironmentChecker {
  constructor() {
    this.requiredVars = [
      'VITE_POCKETBASE_URL',
      'VITE_POCKETBASE_ANON_KEY'
    ];
    
    this.optionalVars = [
      'POCKETBASE_ADMIN_EMAIL',
      'POCKETBASE_ADMIN_PASSWORD',
      'VITE_DEFAULT_STORAGE_PROVIDER'
    ];
    
    this.existingSupabaseVars = [
      'VITE_SUPABASE_URL',
      'VITE_SUPABASE_ANON_KEY'
    ];
  }

  log(message, type = 'info') {
    const colors = {
      info: '\x1b[36m',    
      success: '\x1b[32m', 
      warning: '\x1b[33m', 
      error: '\x1b[31m',   
      reset: '\x1b[0m'     
    };
    
    const color = colors[type] || colors.info;
    console.log(`${color}[EnvChecker] ${message}${colors.reset}`);
  }

  // –ß–∏—Ç–∞–Ω–Ω—è .env —Ñ–∞–π–ª—É
  readEnvFile() {
    const envPath = path.join(__dirname, '.env.local');
    
    if (!fs.existsSync(envPath)) {
      this.log('‚ùå .env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!', 'error');
      this.log('üìù –°—Ç–≤–æ—Ä—ñ—Ç—å .env —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É', 'info');
      return null;
    }

    try {
      const envContent = fs.readFileSync(envPath, 'utf8');
      const envVars = {};
      
      envContent.split('\n').forEach(line => {
        line = line.trim();
        if (line && !line.startsWith('#')) {
          const [key, ...valueParts] = line.split('=');
          if (key && valueParts.length > 0) {
            envVars[key.trim()] = valueParts.join('=').trim();
          }
        }
      });
      
      return envVars;
    } catch (error) {
      this.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è .env —Ñ–∞–π–ª—É: ${error.message}`, 'error');
      return null;
    }
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
  checkRequiredVars(envVars) {
    let allPresent = true;
    
    this.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è PocketBase:', 'info');
    
    this.requiredVars.forEach(varName => {
      if (envVars[varName]) {
        if (envVars[varName] === 'http://your-server.com:8090' || 
            envVars[varName] === 'your-server.com' ||
            envVars[varName].includes('your-server')) {
          this.log(`‚ö†Ô∏è ${varName}: –ø–æ—Ç—Ä–µ–±—É—î –∑–∞–º—ñ–Ω–∏ placeholder –∑–Ω–∞—á–µ–Ω–Ω—è`, 'warning');
          this.log(`   –ü–æ—Ç–æ—á–Ω–µ: ${envVars[varName]}`, 'warning');
          allPresent = false;
        } else {
          this.log(`‚úÖ ${varName}: ${envVars[varName]}`, 'success');
        }
      } else {
        this.log(`‚ùå ${varName}: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`, 'error');
        allPresent = false;
      }
    });
    
    return allPresent;
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
  checkOptionalVars(envVars) {
    this.log('\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö:', 'info');
    
    this.optionalVars.forEach(varName => {
      if (envVars[varName]) {
        if (envVars[varName].includes('example.com') || 
            envVars[varName].includes('your-')) {
          this.log(`‚ö†Ô∏è ${varName}: —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–∞–º—ñ–Ω–∏—Ç–∏ placeholder`, 'warning');
          this.log(`   –ü–æ—Ç–æ—á–Ω–µ: ${envVars[varName]}`, 'warning');
        } else {
          this.log(`‚úÖ ${varName}: –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ`, 'success');
        }
      } else {
        this.log(`‚ÑπÔ∏è ${varName}: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)`, 'info');
      }
    });
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö Supabase –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  checkExistingSupabase(envVars) {
    this.log('\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö Supabase –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', 'info');
    
    let hasSupabase = false;
    
    this.existingSupabaseVars.forEach(varName => {
      if (envVars[varName]) {
        this.log(`‚úÖ ${varName}: –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ`, 'success');
        hasSupabase = true;
      } else {
        this.log(`‚ÑπÔ∏è ${varName}: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`, 'info');
      }
    });
    
    if (hasSupabase) {
      this.log('üéØ Supabase –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–Ω–∞–π–¥–µ–Ω–æ - –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ dual-mode!', 'success');
    } else {
      this.log('üìù Supabase –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ - –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —Ç—ñ–ª—å–∫–∏ PocketBase', 'info');
    }
    
    return hasSupabase;
  }

  // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è URL –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
  async testPocketBaseConnection(url) {
    if (!url || url.includes('your-server')) {
      this.log('‚ö†Ô∏è PocketBase URL –º—ñ—Å—Ç–∏—Ç—å placeholder - –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è', 'warning');
      return false;
    }

    this.log(`üåê –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ: ${url}`, 'info');
    
    try {
      const response = await fetch(`${url}/api/health`, { 
        timeout: 5000 
      });
      
      if (response.ok) {
        this.log('‚úÖ PocketBase —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π!', 'success');
        return true;
      } else {
        this.log(`‚ùå PocketBase —Å–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–≤ –∑ –ø–æ–º–∏–ª–∫–æ—é: ${response.status}`, 'error');
        return false;
      }
    } catch (error) {
      this.log(`‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ PocketBase: ${error.message}`, 'error');
      this.log('üí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ PocketBase –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ', 'info');
      return false;
    }
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
  generateRecommendations(envVars, hasRequiredVars, hasSupabase, connectionWorking) {
    this.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:', 'info');
    
    if (!hasRequiredVars) {
      this.log('1. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ –≤ .env —Ñ–∞–π–ª—ñ', 'warning');
      this.log('   –°–∫–æ–ø—ñ—é–π—Ç–µ –∑ env.pocketbase.example —Ç–∞ –∑–∞–º—ñ–Ω—ñ—Ç—å placeholder –∑–Ω–∞—á–µ–Ω–Ω—è', 'info');
    }
    
    if (!connectionWorking) {
      this.log('2. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ PocketBase —Å–µ—Ä–≤–µ—Ä –Ω–∞ Hetzner VPS', 'warning');
      this.log('   –î–∏–≤—ñ—Ç—å—Å—è POCKETBASE_SETUP_GUIDE.md –¥–ª—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π', 'info');
    }
    
    if (hasRequiredVars && connectionWorking) {
      this.log('3. –ó–∞–ø—É—Å—Ç—ñ—Ç—å setup —Å–∫—Ä–∏–ø—Ç: node pocketbase-setup.js', 'success');
    }
    
    if (hasSupabase) {
      this.log('4. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ VITE_DEFAULT_STORAGE_PROVIDER –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–∏–±–æ—Ä—É', 'info');
    }
    
    this.log('5. –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –∑ PocketBaseTestPage –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º', 'info');
  }

  // –ì–æ–ª–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
  async check() {
    this.log('üöÄ –ü–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ environment –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –¥–ª—è PocketBase', 'info');
    this.log('=' * 60, 'info');
    
    // –ß–∏—Ç–∞–Ω–Ω—è .env —Ñ–∞–π–ª—É
    const envVars = this.readEnvFile();
    if (!envVars) {
      return false;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö
    const hasRequiredVars = this.checkRequiredVars(envVars);
    this.checkOptionalVars(envVars);
    const hasSupabase = this.checkExistingSupabase(envVars);
    
    // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    let connectionWorking = false;
    if (envVars['VITE_POCKETBASE_URL']) {
      connectionWorking = await this.testPocketBaseConnection(envVars['VITE_POCKETBASE_URL']);
    }
    
    // –ü—ñ–¥—Å—É–º–æ–∫
    this.log('\nüìä –ü—ñ–¥—Å—É–º–æ–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:', 'info');
    this.log(`Environment —Ñ–∞–π–ª: ${envVars ? '‚úÖ' : '‚ùå'}`, envVars ? 'success' : 'error');
    this.log(`–û–±–æ–≤'—è–∑–∫–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ: ${hasRequiredVars ? '‚úÖ' : '‚ùå'}`, hasRequiredVars ? 'success' : 'error');
    this.log(`PocketBase –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: ${connectionWorking ? '‚úÖ' : '‚ùå'}`, connectionWorking ? 'success' : 'error');
    this.log(`Supabase –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è: ${hasSupabase ? '‚úÖ' : '‚ÑπÔ∏è'}`, hasSupabase ? 'success' : 'info');
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    this.generateRecommendations(envVars, hasRequiredVars, hasSupabase, connectionWorking);
    
    const isReady = hasRequiredVars && connectionWorking;
    
    this.log(`\nüéØ –°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ: ${isReady ? '–ì–û–¢–û–í–û –î–û –ù–ê–°–¢–£–ü–ù–û–ì–û –ï–¢–ê–ü–£!' : '–ü–û–¢–†–ï–ë–£–Ñ –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø'}`, 
            isReady ? 'success' : 'warning');
    
    return isReady;
  }
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–∑–∞–≤–∂–¥–∏ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ–ª–∏ —ñ–º–ø–æ—Ä—Ç—É—î—Ç—å—Å—è)
const checker = new EnvironmentChecker();
checker.check().then(isReady => {
  process.exit(isReady ? 0 : 1);
}).catch(error => {
  console.error('–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
  process.exit(1);
});

export default EnvironmentChecker;
